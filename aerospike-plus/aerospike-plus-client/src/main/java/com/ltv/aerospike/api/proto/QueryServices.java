// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QueryServices.proto

package com.ltv.aerospike.api.proto;

public final class QueryServices {
  private QueryServices() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface QueryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ltv.aerospike.api.proto.QueryRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <code>string set = 2;</code>
     * @return The set.
     */
    java.lang.String getSet();
    /**
     * <code>string set = 2;</code>
     * @return The bytes for set.
     */
    com.google.protobuf.ByteString
        getSetBytes();

    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */
    int getFieldsCount();
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */
    boolean containsFields(
        java.lang.String key);
    /**
     * Use {@link #getFieldsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getFields();
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getFieldsMap();
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    java.lang.String getFieldsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    java.lang.String getFieldsOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */
    int getFilterCount();
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */
    boolean containsFilter(
        java.lang.String key);
    /**
     * Use {@link #getFilterMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation>
    getFilter();
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */
    java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation>
    getFilterMap();
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */
    com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation getFilterOrDefault(
        java.lang.String key,
        com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation defaultValue);
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */
    com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation getFilterOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getFilterValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getFilterValue();
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getFilterValueMap();
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    int getFilterValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    int getFilterValueOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */
    int getStringValue1Count();
    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */
    boolean containsStringValue1(
        java.lang.String key);
    /**
     * Use {@link #getStringValue1Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getStringValue1();
    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getStringValue1Map();
    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */

    java.lang.String getStringValue1OrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */

    java.lang.String getStringValue1OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */
    int getIntValue1Count();
    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */
    boolean containsIntValue1(
        java.lang.String key);
    /**
     * Use {@link #getIntValue1Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntValue1();
    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntValue1Map();
    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */

    int getIntValue1OrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */

    int getIntValue1OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */
    int getLongValue1Count();
    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */
    boolean containsLongValue1(
        java.lang.String key);
    /**
     * Use {@link #getLongValue1Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Long>
    getLongValue1();
    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.Long>
    getLongValue1Map();
    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */

    long getLongValue1OrDefault(
        java.lang.String key,
        long defaultValue);
    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */

    long getLongValue1OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */
    int getFloatValue1Count();
    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */
    boolean containsFloatValue1(
        java.lang.String key);
    /**
     * Use {@link #getFloatValue1Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Float>
    getFloatValue1();
    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */
    java.util.Map<java.lang.String, java.lang.Float>
    getFloatValue1Map();
    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */

    float getFloatValue1OrDefault(
        java.lang.String key,
        float defaultValue);
    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */

    float getFloatValue1OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */
    int getDoubleValue1Count();
    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */
    boolean containsDoubleValue1(
        java.lang.String key);
    /**
     * Use {@link #getDoubleValue1Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getDoubleValue1();
    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getDoubleValue1Map();
    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */

    double getDoubleValue1OrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */

    double getDoubleValue1OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */
    int getBooleanValue1Count();
    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */
    boolean containsBooleanValue1(
        java.lang.String key);
    /**
     * Use {@link #getBooleanValue1Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Boolean>
    getBooleanValue1();
    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */
    java.util.Map<java.lang.String, java.lang.Boolean>
    getBooleanValue1Map();
    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */

    boolean getBooleanValue1OrDefault(
        java.lang.String key,
        boolean defaultValue);
    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */

    boolean getBooleanValue1OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */
    int getBytesValue1Count();
    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */
    boolean containsBytesValue1(
        java.lang.String key);
    /**
     * Use {@link #getBytesValue1Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getBytesValue1();
    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getBytesValue1Map();
    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */

    com.google.protobuf.ByteString getBytesValue1OrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */

    com.google.protobuf.ByteString getBytesValue1OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */
    int getStringValue2Count();
    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */
    boolean containsStringValue2(
        java.lang.String key);
    /**
     * Use {@link #getStringValue2Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getStringValue2();
    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getStringValue2Map();
    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */

    java.lang.String getStringValue2OrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */

    java.lang.String getStringValue2OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */
    int getIntValue2Count();
    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */
    boolean containsIntValue2(
        java.lang.String key);
    /**
     * Use {@link #getIntValue2Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntValue2();
    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntValue2Map();
    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */

    int getIntValue2OrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */

    int getIntValue2OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */
    int getLongValue2Count();
    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */
    boolean containsLongValue2(
        java.lang.String key);
    /**
     * Use {@link #getLongValue2Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Long>
    getLongValue2();
    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */
    java.util.Map<java.lang.String, java.lang.Long>
    getLongValue2Map();
    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */

    long getLongValue2OrDefault(
        java.lang.String key,
        long defaultValue);
    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */

    long getLongValue2OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */
    int getFloatValue2Count();
    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */
    boolean containsFloatValue2(
        java.lang.String key);
    /**
     * Use {@link #getFloatValue2Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Float>
    getFloatValue2();
    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */
    java.util.Map<java.lang.String, java.lang.Float>
    getFloatValue2Map();
    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */

    float getFloatValue2OrDefault(
        java.lang.String key,
        float defaultValue);
    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */

    float getFloatValue2OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */
    int getDoubleValue2Count();
    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */
    boolean containsDoubleValue2(
        java.lang.String key);
    /**
     * Use {@link #getDoubleValue2Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getDoubleValue2();
    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getDoubleValue2Map();
    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */

    double getDoubleValue2OrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */

    double getDoubleValue2OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */
    int getBooleanValue2Count();
    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */
    boolean containsBooleanValue2(
        java.lang.String key);
    /**
     * Use {@link #getBooleanValue2Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Boolean>
    getBooleanValue2();
    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */
    java.util.Map<java.lang.String, java.lang.Boolean>
    getBooleanValue2Map();
    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */

    boolean getBooleanValue2OrDefault(
        java.lang.String key,
        boolean defaultValue);
    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */

    boolean getBooleanValue2OrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */
    int getBytesValue2Count();
    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */
    boolean containsBytesValue2(
        java.lang.String key);
    /**
     * Use {@link #getBytesValue2Map()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getBytesValue2();
    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getBytesValue2Map();
    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */

    com.google.protobuf.ByteString getBytesValue2OrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */

    com.google.protobuf.ByteString getBytesValue2OrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code com.ltv.aerospike.api.proto.QueryRequest}
   */
  public  static final class QueryRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.ltv.aerospike.api.proto.QueryRequest)
      QueryRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QueryRequest.newBuilder() to construct.
    private QueryRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueryRequest() {
      namespace_ = "";
      set_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QueryRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private QueryRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              namespace_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              set_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fields_ = com.google.protobuf.MapField.newMapField(
                    FieldsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              fields__ = input.readMessage(
                  FieldsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              fields_.getMutableMap().put(
                  fields__.getKey(), fields__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                filter_ = com.google.protobuf.MapField.newMapField(
                    FilterDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              filter__ = input.readMessage(
                  FilterDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              filter_.getMutableMap().put(
                  filter__.getKey(), filter__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                stringValue1_ = com.google.protobuf.MapField.newMapField(
                    StringValue1DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              stringValue1__ = input.readMessage(
                  StringValue1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringValue1_.getMutableMap().put(
                  stringValue1__.getKey(), stringValue1__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                intValue1_ = com.google.protobuf.MapField.newMapField(
                    IntValue1DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              intValue1__ = input.readMessage(
                  IntValue1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              intValue1_.getMutableMap().put(
                  intValue1__.getKey(), intValue1__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                longValue1_ = com.google.protobuf.MapField.newMapField(
                    LongValue1DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
              longValue1__ = input.readMessage(
                  LongValue1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              longValue1_.getMutableMap().put(
                  longValue1__.getKey(), longValue1__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                floatValue1_ = com.google.protobuf.MapField.newMapField(
                    FloatValue1DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
              floatValue1__ = input.readMessage(
                  FloatValue1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              floatValue1_.getMutableMap().put(
                  floatValue1__.getKey(), floatValue1__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                doubleValue1_ = com.google.protobuf.MapField.newMapField(
                    DoubleValue1DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
              doubleValue1__ = input.readMessage(
                  DoubleValue1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              doubleValue1_.getMutableMap().put(
                  doubleValue1__.getKey(), doubleValue1__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                booleanValue1_ = com.google.protobuf.MapField.newMapField(
                    BooleanValue1DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
              booleanValue1__ = input.readMessage(
                  BooleanValue1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              booleanValue1_.getMutableMap().put(
                  booleanValue1__.getKey(), booleanValue1__.getValue());
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                bytesValue1_ = com.google.protobuf.MapField.newMapField(
                    BytesValue1DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              bytesValue1__ = input.readMessage(
                  BytesValue1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bytesValue1_.getMutableMap().put(
                  bytesValue1__.getKey(), bytesValue1__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                stringValue2_ = com.google.protobuf.MapField.newMapField(
                    StringValue2DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              stringValue2__ = input.readMessage(
                  StringValue2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringValue2_.getMutableMap().put(
                  stringValue2__.getKey(), stringValue2__.getValue());
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                intValue2_ = com.google.protobuf.MapField.newMapField(
                    IntValue2DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              intValue2__ = input.readMessage(
                  IntValue2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              intValue2_.getMutableMap().put(
                  intValue2__.getKey(), intValue2__.getValue());
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                longValue2_ = com.google.protobuf.MapField.newMapField(
                    LongValue2DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000800;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
              longValue2__ = input.readMessage(
                  LongValue2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              longValue2_.getMutableMap().put(
                  longValue2__.getKey(), longValue2__.getValue());
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                floatValue2_ = com.google.protobuf.MapField.newMapField(
                    FloatValue2DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
              floatValue2__ = input.readMessage(
                  FloatValue2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              floatValue2_.getMutableMap().put(
                  floatValue2__.getKey(), floatValue2__.getValue());
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                doubleValue2_ = com.google.protobuf.MapField.newMapField(
                    DoubleValue2DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00002000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
              doubleValue2__ = input.readMessage(
                  DoubleValue2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              doubleValue2_.getMutableMap().put(
                  doubleValue2__.getKey(), doubleValue2__.getValue());
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00004000) != 0)) {
                booleanValue2_ = com.google.protobuf.MapField.newMapField(
                    BooleanValue2DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00004000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
              booleanValue2__ = input.readMessage(
                  BooleanValue2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              booleanValue2_.getMutableMap().put(
                  booleanValue2__.getKey(), booleanValue2__.getValue());
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00008000) != 0)) {
                bytesValue2_ = com.google.protobuf.MapField.newMapField(
                    BytesValue2DefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00008000;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              bytesValue2__ = input.readMessage(
                  BytesValue2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bytesValue2_.getMutableMap().put(
                  bytesValue2__.getKey(), bytesValue2__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetFields();
        case 4:
          return internalGetFilter();
        case 5:
          return internalGetStringValue1();
        case 6:
          return internalGetIntValue1();
        case 7:
          return internalGetLongValue1();
        case 8:
          return internalGetFloatValue1();
        case 9:
          return internalGetDoubleValue1();
        case 10:
          return internalGetBooleanValue1();
        case 11:
          return internalGetBytesValue1();
        case 12:
          return internalGetStringValue2();
        case 13:
          return internalGetIntValue2();
        case 14:
          return internalGetLongValue2();
        case 15:
          return internalGetFloatValue2();
        case 16:
          return internalGetDoubleValue2();
        case 17:
          return internalGetBooleanValue2();
        case 18:
          return internalGetBytesValue2();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ltv.aerospike.api.proto.QueryServices.QueryRequest.class, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.Builder.class);
    }

    /**
     * Protobuf enum {@code com.ltv.aerospike.api.proto.QueryRequest.FilterOperation}
     */
    public enum FilterOperation
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>EQ = 0;</code>
       */
      EQ(0),
      /**
       * <code>GT = 1;</code>
       */
      GT(1),
      /**
       * <code>GTEQ = 2;</code>
       */
      GTEQ(2),
      /**
       * <code>LT = 3;</code>
       */
      LT(3),
      /**
       * <code>LTEQ = 4;</code>
       */
      LTEQ(4),
      /**
       * <code>NOTEQ = 5;</code>
       */
      NOTEQ(5),
      /**
       * <code>BETWEEN = 6;</code>
       */
      BETWEEN(6),
      /**
       * <code>START_WITH = 7;</code>
       */
      START_WITH(7),
      /**
       * <code>ENDS_WITH = 8;</code>
       */
      ENDS_WITH(8),
      /**
       * <code>CONTAINING = 9;</code>
       */
      CONTAINING(9),
      /**
       * <code>IN = 10;</code>
       */
      IN(10),
      /**
       * <code>LIST_CONTAINS = 11;</code>
       */
      LIST_CONTAINS(11),
      /**
       * <code>MAP_KEYS_CONTAINS = 12;</code>
       */
      MAP_KEYS_CONTAINS(12),
      /**
       * <code>MAP_VALUES_CONTAINS = 13;</code>
       */
      MAP_VALUES_CONTAINS(13),
      /**
       * <code>LIST_BETWEEN = 14;</code>
       */
      LIST_BETWEEN(14),
      /**
       * <code>MAP_KEYS_BETWEEN = 15;</code>
       */
      MAP_KEYS_BETWEEN(15),
      /**
       * <code>MAP_VALUES_BETWEEN = 16;</code>
       */
      MAP_VALUES_BETWEEN(16),
      /**
       * <code>GEO_WITHIN = 17;</code>
       */
      GEO_WITHIN(17),
      /**
       * <code>OR = 18;</code>
       */
      OR(18),
      /**
       * <code>AND = 19;</code>
       */
      AND(19),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>EQ = 0;</code>
       */
      public static final int EQ_VALUE = 0;
      /**
       * <code>GT = 1;</code>
       */
      public static final int GT_VALUE = 1;
      /**
       * <code>GTEQ = 2;</code>
       */
      public static final int GTEQ_VALUE = 2;
      /**
       * <code>LT = 3;</code>
       */
      public static final int LT_VALUE = 3;
      /**
       * <code>LTEQ = 4;</code>
       */
      public static final int LTEQ_VALUE = 4;
      /**
       * <code>NOTEQ = 5;</code>
       */
      public static final int NOTEQ_VALUE = 5;
      /**
       * <code>BETWEEN = 6;</code>
       */
      public static final int BETWEEN_VALUE = 6;
      /**
       * <code>START_WITH = 7;</code>
       */
      public static final int START_WITH_VALUE = 7;
      /**
       * <code>ENDS_WITH = 8;</code>
       */
      public static final int ENDS_WITH_VALUE = 8;
      /**
       * <code>CONTAINING = 9;</code>
       */
      public static final int CONTAINING_VALUE = 9;
      /**
       * <code>IN = 10;</code>
       */
      public static final int IN_VALUE = 10;
      /**
       * <code>LIST_CONTAINS = 11;</code>
       */
      public static final int LIST_CONTAINS_VALUE = 11;
      /**
       * <code>MAP_KEYS_CONTAINS = 12;</code>
       */
      public static final int MAP_KEYS_CONTAINS_VALUE = 12;
      /**
       * <code>MAP_VALUES_CONTAINS = 13;</code>
       */
      public static final int MAP_VALUES_CONTAINS_VALUE = 13;
      /**
       * <code>LIST_BETWEEN = 14;</code>
       */
      public static final int LIST_BETWEEN_VALUE = 14;
      /**
       * <code>MAP_KEYS_BETWEEN = 15;</code>
       */
      public static final int MAP_KEYS_BETWEEN_VALUE = 15;
      /**
       * <code>MAP_VALUES_BETWEEN = 16;</code>
       */
      public static final int MAP_VALUES_BETWEEN_VALUE = 16;
      /**
       * <code>GEO_WITHIN = 17;</code>
       */
      public static final int GEO_WITHIN_VALUE = 17;
      /**
       * <code>OR = 18;</code>
       */
      public static final int OR_VALUE = 18;
      /**
       * <code>AND = 19;</code>
       */
      public static final int AND_VALUE = 19;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FilterOperation valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static FilterOperation forNumber(int value) {
        switch (value) {
          case 0: return EQ;
          case 1: return GT;
          case 2: return GTEQ;
          case 3: return LT;
          case 4: return LTEQ;
          case 5: return NOTEQ;
          case 6: return BETWEEN;
          case 7: return START_WITH;
          case 8: return ENDS_WITH;
          case 9: return CONTAINING;
          case 10: return IN;
          case 11: return LIST_CONTAINS;
          case 12: return MAP_KEYS_CONTAINS;
          case 13: return MAP_VALUES_CONTAINS;
          case 14: return LIST_BETWEEN;
          case 15: return MAP_KEYS_BETWEEN;
          case 16: return MAP_VALUES_BETWEEN;
          case 17: return GEO_WITHIN;
          case 18: return OR;
          case 19: return AND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FilterOperation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          FilterOperation> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FilterOperation>() {
              public FilterOperation findValueByNumber(int number) {
                return FilterOperation.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.ltv.aerospike.api.proto.QueryServices.QueryRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final FilterOperation[] VALUES = values();

      public static FilterOperation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private FilterOperation(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.ltv.aerospike.api.proto.QueryRequest.FilterOperation)
    }

    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object namespace_;
    /**
     * <code>string namespace = 1;</code>
     * @return The namespace.
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      }
    }
    /**
     * <code>string namespace = 1;</code>
     * @return The bytes for namespace.
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SET_FIELD_NUMBER = 2;
    private volatile java.lang.Object set_;
    /**
     * <code>string set = 2;</code>
     * @return The set.
     */
    public java.lang.String getSet() {
      java.lang.Object ref = set_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        set_ = s;
        return s;
      }
    }
    /**
     * <code>string set = 2;</code>
     * @return The bytes for set.
     */
    public com.google.protobuf.ByteString
        getSetBytes() {
      java.lang.Object ref = set_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        set_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 3;
    private static final class FieldsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_FieldsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> fields_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetFields() {
      if (fields_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FieldsDefaultEntryHolder.defaultEntry);
      }
      return fields_;
    }

    public int getFieldsCount() {
      return internalGetFields().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    public boolean containsFields(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetFields().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFieldsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getFields() {
      return getFieldsMap();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getFieldsMap() {
      return internalGetFields().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    public java.lang.String getFieldsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetFields().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    public java.lang.String getFieldsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetFields().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FILTER_FIELD_NUMBER = 4;
    private static final class FilterDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_FilterEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation.EQ.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> filter_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetFilter() {
      if (filter_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FilterDefaultEntryHolder.defaultEntry);
      }
      return filter_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation> filterValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation.internalGetValueMap(),
                com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation>
    internalGetAdaptedFilterMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation, java.lang.Integer>(
              map, filterValueConverter);
    }

    public int getFilterCount() {
      return internalGetFilter().getMap().size();
    }
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    public boolean containsFilter(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetFilter().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFilterMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation>
    getFilter() {
      return getFilterMap();
    }
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    public java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation>
    getFilterMap() {
      return internalGetAdaptedFilterMap(
          internalGetFilter().getMap());}
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    public com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation getFilterOrDefault(
        java.lang.String key,
        com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetFilter().getMap();
      return map.containsKey(key)
             ? filterValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    public com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation getFilterOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetFilter().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return filterValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getFilterValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getFilterValue() {
      return getFilterValueMap();
    }
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getFilterValueMap() {
      return internalGetFilter().getMap();
    }
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    public int getFilterValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetFilter().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
     */

    public int getFilterValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetFilter().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRINGVALUE1_FIELD_NUMBER = 5;
    private static final class StringValue1DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue1Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> stringValue1_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetStringValue1() {
      if (stringValue1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringValue1DefaultEntryHolder.defaultEntry);
      }
      return stringValue1_;
    }

    public int getStringValue1Count() {
      return internalGetStringValue1().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */

    public boolean containsStringValue1(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStringValue1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringValue1Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStringValue1() {
      return getStringValue1Map();
    }
    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getStringValue1Map() {
      return internalGetStringValue1().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */

    public java.lang.String getStringValue1OrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringValue1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
     */

    public java.lang.String getStringValue1OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringValue1().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INTVALUE1_FIELD_NUMBER = 6;
    private static final class IntValue1DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue1Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> intValue1_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetIntValue1() {
      if (intValue1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntValue1DefaultEntryHolder.defaultEntry);
      }
      return intValue1_;
    }

    public int getIntValue1Count() {
      return internalGetIntValue1().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */

    public boolean containsIntValue1(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetIntValue1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntValue1Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getIntValue1() {
      return getIntValue1Map();
    }
    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getIntValue1Map() {
      return internalGetIntValue1().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */

    public int getIntValue1OrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIntValue1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
     */

    public int getIntValue1OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIntValue1().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LONGVALUE1_FIELD_NUMBER = 7;
    private static final class LongValue1DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Long>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue1Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Long> longValue1_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetLongValue1() {
      if (longValue1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LongValue1DefaultEntryHolder.defaultEntry);
      }
      return longValue1_;
    }

    public int getLongValue1Count() {
      return internalGetLongValue1().getMap().size();
    }
    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */

    public boolean containsLongValue1(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLongValue1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLongValue1Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long> getLongValue1() {
      return getLongValue1Map();
    }
    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Long> getLongValue1Map() {
      return internalGetLongValue1().getMap();
    }
    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */

    public long getLongValue1OrDefault(
        java.lang.String key,
        long defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetLongValue1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
     */

    public long getLongValue1OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetLongValue1().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FLOATVALUE1_FIELD_NUMBER = 8;
    private static final class FloatValue1DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Float>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue1Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> floatValue1_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetFloatValue1() {
      if (floatValue1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FloatValue1DefaultEntryHolder.defaultEntry);
      }
      return floatValue1_;
    }

    public int getFloatValue1Count() {
      return internalGetFloatValue1().getMap().size();
    }
    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */

    public boolean containsFloatValue1(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetFloatValue1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFloatValue1Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getFloatValue1() {
      return getFloatValue1Map();
    }
    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Float> getFloatValue1Map() {
      return internalGetFloatValue1().getMap();
    }
    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */

    public float getFloatValue1OrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetFloatValue1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
     */

    public float getFloatValue1OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetFloatValue1().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DOUBLEVALUE1_FIELD_NUMBER = 9;
    private static final class DoubleValue1DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue1Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> doubleValue1_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetDoubleValue1() {
      if (doubleValue1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DoubleValue1DefaultEntryHolder.defaultEntry);
      }
      return doubleValue1_;
    }

    public int getDoubleValue1Count() {
      return internalGetDoubleValue1().getMap().size();
    }
    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */

    public boolean containsDoubleValue1(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetDoubleValue1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDoubleValue1Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getDoubleValue1() {
      return getDoubleValue1Map();
    }
    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Double> getDoubleValue1Map() {
      return internalGetDoubleValue1().getMap();
    }
    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */

    public double getDoubleValue1OrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleValue1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
     */

    public double getDoubleValue1OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleValue1().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BOOLEANVALUE1_FIELD_NUMBER = 10;
    private static final class BooleanValue1DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Boolean>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue1Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Boolean> booleanValue1_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
    internalGetBooleanValue1() {
      if (booleanValue1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BooleanValue1DefaultEntryHolder.defaultEntry);
      }
      return booleanValue1_;
    }

    public int getBooleanValue1Count() {
      return internalGetBooleanValue1().getMap().size();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */

    public boolean containsBooleanValue1(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBooleanValue1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBooleanValue1Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanValue1() {
      return getBooleanValue1Map();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanValue1Map() {
      return internalGetBooleanValue1().getMap();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */

    public boolean getBooleanValue1OrDefault(
        java.lang.String key,
        boolean defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetBooleanValue1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
     */

    public boolean getBooleanValue1OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetBooleanValue1().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BYTESVALUE1_FIELD_NUMBER = 11;
    private static final class BytesValue1DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue1Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> bytesValue1_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetBytesValue1() {
      if (bytesValue1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BytesValue1DefaultEntryHolder.defaultEntry);
      }
      return bytesValue1_;
    }

    public int getBytesValue1Count() {
      return internalGetBytesValue1().getMap().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */

    public boolean containsBytesValue1(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBytesValue1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBytesValue1Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesValue1() {
      return getBytesValue1Map();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesValue1Map() {
      return internalGetBytesValue1().getMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */

    public com.google.protobuf.ByteString getBytesValue1OrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetBytesValue1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
     */

    public com.google.protobuf.ByteString getBytesValue1OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetBytesValue1().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STRINGVALUE2_FIELD_NUMBER = 12;
    private static final class StringValue2DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue2Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> stringValue2_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetStringValue2() {
      if (stringValue2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringValue2DefaultEntryHolder.defaultEntry);
      }
      return stringValue2_;
    }

    public int getStringValue2Count() {
      return internalGetStringValue2().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */

    public boolean containsStringValue2(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStringValue2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringValue2Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStringValue2() {
      return getStringValue2Map();
    }
    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getStringValue2Map() {
      return internalGetStringValue2().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */

    public java.lang.String getStringValue2OrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringValue2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
     */

    public java.lang.String getStringValue2OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringValue2().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INTVALUE2_FIELD_NUMBER = 13;
    private static final class IntValue2DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue2Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> intValue2_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetIntValue2() {
      if (intValue2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntValue2DefaultEntryHolder.defaultEntry);
      }
      return intValue2_;
    }

    public int getIntValue2Count() {
      return internalGetIntValue2().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */

    public boolean containsIntValue2(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetIntValue2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntValue2Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getIntValue2() {
      return getIntValue2Map();
    }
    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getIntValue2Map() {
      return internalGetIntValue2().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */

    public int getIntValue2OrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIntValue2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
     */

    public int getIntValue2OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIntValue2().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LONGVALUE2_FIELD_NUMBER = 14;
    private static final class LongValue2DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Long>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue2Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Long> longValue2_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetLongValue2() {
      if (longValue2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LongValue2DefaultEntryHolder.defaultEntry);
      }
      return longValue2_;
    }

    public int getLongValue2Count() {
      return internalGetLongValue2().getMap().size();
    }
    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */

    public boolean containsLongValue2(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLongValue2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLongValue2Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long> getLongValue2() {
      return getLongValue2Map();
    }
    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Long> getLongValue2Map() {
      return internalGetLongValue2().getMap();
    }
    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */

    public long getLongValue2OrDefault(
        java.lang.String key,
        long defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetLongValue2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
     */

    public long getLongValue2OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetLongValue2().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FLOATVALUE2_FIELD_NUMBER = 15;
    private static final class FloatValue2DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Float>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue2Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> floatValue2_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetFloatValue2() {
      if (floatValue2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FloatValue2DefaultEntryHolder.defaultEntry);
      }
      return floatValue2_;
    }

    public int getFloatValue2Count() {
      return internalGetFloatValue2().getMap().size();
    }
    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */

    public boolean containsFloatValue2(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetFloatValue2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFloatValue2Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getFloatValue2() {
      return getFloatValue2Map();
    }
    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Float> getFloatValue2Map() {
      return internalGetFloatValue2().getMap();
    }
    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */

    public float getFloatValue2OrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetFloatValue2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
     */

    public float getFloatValue2OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetFloatValue2().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DOUBLEVALUE2_FIELD_NUMBER = 16;
    private static final class DoubleValue2DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue2Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> doubleValue2_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetDoubleValue2() {
      if (doubleValue2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DoubleValue2DefaultEntryHolder.defaultEntry);
      }
      return doubleValue2_;
    }

    public int getDoubleValue2Count() {
      return internalGetDoubleValue2().getMap().size();
    }
    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */

    public boolean containsDoubleValue2(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetDoubleValue2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDoubleValue2Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getDoubleValue2() {
      return getDoubleValue2Map();
    }
    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Double> getDoubleValue2Map() {
      return internalGetDoubleValue2().getMap();
    }
    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */

    public double getDoubleValue2OrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleValue2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
     */

    public double getDoubleValue2OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleValue2().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BOOLEANVALUE2_FIELD_NUMBER = 17;
    private static final class BooleanValue2DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Boolean>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue2Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Boolean> booleanValue2_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
    internalGetBooleanValue2() {
      if (booleanValue2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BooleanValue2DefaultEntryHolder.defaultEntry);
      }
      return booleanValue2_;
    }

    public int getBooleanValue2Count() {
      return internalGetBooleanValue2().getMap().size();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */

    public boolean containsBooleanValue2(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBooleanValue2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBooleanValue2Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanValue2() {
      return getBooleanValue2Map();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanValue2Map() {
      return internalGetBooleanValue2().getMap();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */

    public boolean getBooleanValue2OrDefault(
        java.lang.String key,
        boolean defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetBooleanValue2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
     */

    public boolean getBooleanValue2OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetBooleanValue2().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BYTESVALUE2_FIELD_NUMBER = 18;
    private static final class BytesValue2DefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue2Entry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> bytesValue2_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetBytesValue2() {
      if (bytesValue2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BytesValue2DefaultEntryHolder.defaultEntry);
      }
      return bytesValue2_;
    }

    public int getBytesValue2Count() {
      return internalGetBytesValue2().getMap().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */

    public boolean containsBytesValue2(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBytesValue2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBytesValue2Map()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesValue2() {
      return getBytesValue2Map();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesValue2Map() {
      return internalGetBytesValue2().getMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */

    public com.google.protobuf.ByteString getBytesValue2OrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetBytesValue2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
     */

    public com.google.protobuf.ByteString getBytesValue2OrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetBytesValue2().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNamespaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
      }
      if (!getSetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, set_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetFields(),
          FieldsDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetFilter(),
          FilterDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringValue1(),
          StringValue1DefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetIntValue1(),
          IntValue1DefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLongValue1(),
          LongValue1DefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetFloatValue1(),
          FloatValue1DefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetDoubleValue1(),
          DoubleValue1DefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetBooleanValue1(),
          BooleanValue1DefaultEntryHolder.defaultEntry,
          10);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetBytesValue1(),
          BytesValue1DefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringValue2(),
          StringValue2DefaultEntryHolder.defaultEntry,
          12);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetIntValue2(),
          IntValue2DefaultEntryHolder.defaultEntry,
          13);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLongValue2(),
          LongValue2DefaultEntryHolder.defaultEntry,
          14);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetFloatValue2(),
          FloatValue2DefaultEntryHolder.defaultEntry,
          15);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetDoubleValue2(),
          DoubleValue2DefaultEntryHolder.defaultEntry,
          16);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetBooleanValue2(),
          BooleanValue2DefaultEntryHolder.defaultEntry,
          17);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetBytesValue2(),
          BytesValue2DefaultEntryHolder.defaultEntry,
          18);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNamespaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
      }
      if (!getSetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, set_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetFields().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        fields__ = FieldsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, fields__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetFilter().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        filter__ = FilterDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, filter__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetStringValue1().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        stringValue1__ = StringValue1DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, stringValue1__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetIntValue1().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        intValue1__ = IntValue1DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, intValue1__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
           : internalGetLongValue1().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
        longValue1__ = LongValue1DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, longValue1__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetFloatValue1().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        floatValue1__ = FloatValue1DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, floatValue1__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetDoubleValue1().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        doubleValue1__ = DoubleValue1DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, doubleValue1__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Boolean> entry
           : internalGetBooleanValue1().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
        booleanValue1__ = BooleanValue1DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, booleanValue1__);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetBytesValue1().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        bytesValue1__ = BytesValue1DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, bytesValue1__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetStringValue2().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        stringValue2__ = StringValue2DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, stringValue2__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetIntValue2().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        intValue2__ = IntValue2DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, intValue2__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
           : internalGetLongValue2().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
        longValue2__ = LongValue2DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, longValue2__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetFloatValue2().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        floatValue2__ = FloatValue2DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, floatValue2__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetDoubleValue2().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        doubleValue2__ = DoubleValue2DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, doubleValue2__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Boolean> entry
           : internalGetBooleanValue2().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
        booleanValue2__ = BooleanValue2DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, booleanValue2__);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetBytesValue2().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        bytesValue2__ = BytesValue2DefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, bytesValue2__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ltv.aerospike.api.proto.QueryServices.QueryRequest)) {
        return super.equals(obj);
      }
      com.ltv.aerospike.api.proto.QueryServices.QueryRequest other = (com.ltv.aerospike.api.proto.QueryServices.QueryRequest) obj;

      if (!getNamespace()
          .equals(other.getNamespace())) return false;
      if (!getSet()
          .equals(other.getSet())) return false;
      if (!internalGetFields().equals(
          other.internalGetFields())) return false;
      if (!internalGetFilter().equals(
          other.internalGetFilter())) return false;
      if (!internalGetStringValue1().equals(
          other.internalGetStringValue1())) return false;
      if (!internalGetIntValue1().equals(
          other.internalGetIntValue1())) return false;
      if (!internalGetLongValue1().equals(
          other.internalGetLongValue1())) return false;
      if (!internalGetFloatValue1().equals(
          other.internalGetFloatValue1())) return false;
      if (!internalGetDoubleValue1().equals(
          other.internalGetDoubleValue1())) return false;
      if (!internalGetBooleanValue1().equals(
          other.internalGetBooleanValue1())) return false;
      if (!internalGetBytesValue1().equals(
          other.internalGetBytesValue1())) return false;
      if (!internalGetStringValue2().equals(
          other.internalGetStringValue2())) return false;
      if (!internalGetIntValue2().equals(
          other.internalGetIntValue2())) return false;
      if (!internalGetLongValue2().equals(
          other.internalGetLongValue2())) return false;
      if (!internalGetFloatValue2().equals(
          other.internalGetFloatValue2())) return false;
      if (!internalGetDoubleValue2().equals(
          other.internalGetDoubleValue2())) return false;
      if (!internalGetBooleanValue2().equals(
          other.internalGetBooleanValue2())) return false;
      if (!internalGetBytesValue2().equals(
          other.internalGetBytesValue2())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNamespace().hashCode();
      hash = (37 * hash) + SET_FIELD_NUMBER;
      hash = (53 * hash) + getSet().hashCode();
      if (!internalGetFields().getMap().isEmpty()) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFields().hashCode();
      }
      if (!internalGetFilter().getMap().isEmpty()) {
        hash = (37 * hash) + FILTER_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFilter().hashCode();
      }
      if (!internalGetStringValue1().getMap().isEmpty()) {
        hash = (37 * hash) + STRINGVALUE1_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringValue1().hashCode();
      }
      if (!internalGetIntValue1().getMap().isEmpty()) {
        hash = (37 * hash) + INTVALUE1_FIELD_NUMBER;
        hash = (53 * hash) + internalGetIntValue1().hashCode();
      }
      if (!internalGetLongValue1().getMap().isEmpty()) {
        hash = (37 * hash) + LONGVALUE1_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLongValue1().hashCode();
      }
      if (!internalGetFloatValue1().getMap().isEmpty()) {
        hash = (37 * hash) + FLOATVALUE1_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFloatValue1().hashCode();
      }
      if (!internalGetDoubleValue1().getMap().isEmpty()) {
        hash = (37 * hash) + DOUBLEVALUE1_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDoubleValue1().hashCode();
      }
      if (!internalGetBooleanValue1().getMap().isEmpty()) {
        hash = (37 * hash) + BOOLEANVALUE1_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBooleanValue1().hashCode();
      }
      if (!internalGetBytesValue1().getMap().isEmpty()) {
        hash = (37 * hash) + BYTESVALUE1_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBytesValue1().hashCode();
      }
      if (!internalGetStringValue2().getMap().isEmpty()) {
        hash = (37 * hash) + STRINGVALUE2_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringValue2().hashCode();
      }
      if (!internalGetIntValue2().getMap().isEmpty()) {
        hash = (37 * hash) + INTVALUE2_FIELD_NUMBER;
        hash = (53 * hash) + internalGetIntValue2().hashCode();
      }
      if (!internalGetLongValue2().getMap().isEmpty()) {
        hash = (37 * hash) + LONGVALUE2_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLongValue2().hashCode();
      }
      if (!internalGetFloatValue2().getMap().isEmpty()) {
        hash = (37 * hash) + FLOATVALUE2_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFloatValue2().hashCode();
      }
      if (!internalGetDoubleValue2().getMap().isEmpty()) {
        hash = (37 * hash) + DOUBLEVALUE2_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDoubleValue2().hashCode();
      }
      if (!internalGetBooleanValue2().getMap().isEmpty()) {
        hash = (37 * hash) + BOOLEANVALUE2_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBooleanValue2().hashCode();
      }
      if (!internalGetBytesValue2().getMap().isEmpty()) {
        hash = (37 * hash) + BYTESVALUE2_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBytesValue2().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ltv.aerospike.api.proto.QueryServices.QueryRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ltv.aerospike.api.proto.QueryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ltv.aerospike.api.proto.QueryRequest)
        com.ltv.aerospike.api.proto.QueryServices.QueryRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetFields();
          case 4:
            return internalGetFilter();
          case 5:
            return internalGetStringValue1();
          case 6:
            return internalGetIntValue1();
          case 7:
            return internalGetLongValue1();
          case 8:
            return internalGetFloatValue1();
          case 9:
            return internalGetDoubleValue1();
          case 10:
            return internalGetBooleanValue1();
          case 11:
            return internalGetBytesValue1();
          case 12:
            return internalGetStringValue2();
          case 13:
            return internalGetIntValue2();
          case 14:
            return internalGetLongValue2();
          case 15:
            return internalGetFloatValue2();
          case 16:
            return internalGetDoubleValue2();
          case 17:
            return internalGetBooleanValue2();
          case 18:
            return internalGetBytesValue2();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableFields();
          case 4:
            return internalGetMutableFilter();
          case 5:
            return internalGetMutableStringValue1();
          case 6:
            return internalGetMutableIntValue1();
          case 7:
            return internalGetMutableLongValue1();
          case 8:
            return internalGetMutableFloatValue1();
          case 9:
            return internalGetMutableDoubleValue1();
          case 10:
            return internalGetMutableBooleanValue1();
          case 11:
            return internalGetMutableBytesValue1();
          case 12:
            return internalGetMutableStringValue2();
          case 13:
            return internalGetMutableIntValue2();
          case 14:
            return internalGetMutableLongValue2();
          case 15:
            return internalGetMutableFloatValue2();
          case 16:
            return internalGetMutableDoubleValue2();
          case 17:
            return internalGetMutableBooleanValue2();
          case 18:
            return internalGetMutableBytesValue2();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ltv.aerospike.api.proto.QueryServices.QueryRequest.class, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.Builder.class);
      }

      // Construct using com.ltv.aerospike.api.proto.QueryServices.QueryRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        namespace_ = "";

        set_ = "";

        internalGetMutableFields().clear();
        internalGetMutableFilter().clear();
        internalGetMutableStringValue1().clear();
        internalGetMutableIntValue1().clear();
        internalGetMutableLongValue1().clear();
        internalGetMutableFloatValue1().clear();
        internalGetMutableDoubleValue1().clear();
        internalGetMutableBooleanValue1().clear();
        internalGetMutableBytesValue1().clear();
        internalGetMutableStringValue2().clear();
        internalGetMutableIntValue2().clear();
        internalGetMutableLongValue2().clear();
        internalGetMutableFloatValue2().clear();
        internalGetMutableDoubleValue2().clear();
        internalGetMutableBooleanValue2().clear();
        internalGetMutableBytesValue2().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor;
      }

      @java.lang.Override
      public com.ltv.aerospike.api.proto.QueryServices.QueryRequest getDefaultInstanceForType() {
        return com.ltv.aerospike.api.proto.QueryServices.QueryRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.ltv.aerospike.api.proto.QueryServices.QueryRequest build() {
        com.ltv.aerospike.api.proto.QueryServices.QueryRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.ltv.aerospike.api.proto.QueryServices.QueryRequest buildPartial() {
        com.ltv.aerospike.api.proto.QueryServices.QueryRequest result = new com.ltv.aerospike.api.proto.QueryServices.QueryRequest(this);
        int from_bitField0_ = bitField0_;
        result.namespace_ = namespace_;
        result.set_ = set_;
        result.fields_ = internalGetFields();
        result.fields_.makeImmutable();
        result.filter_ = internalGetFilter();
        result.filter_.makeImmutable();
        result.stringValue1_ = internalGetStringValue1();
        result.stringValue1_.makeImmutable();
        result.intValue1_ = internalGetIntValue1();
        result.intValue1_.makeImmutable();
        result.longValue1_ = internalGetLongValue1();
        result.longValue1_.makeImmutable();
        result.floatValue1_ = internalGetFloatValue1();
        result.floatValue1_.makeImmutable();
        result.doubleValue1_ = internalGetDoubleValue1();
        result.doubleValue1_.makeImmutable();
        result.booleanValue1_ = internalGetBooleanValue1();
        result.booleanValue1_.makeImmutable();
        result.bytesValue1_ = internalGetBytesValue1();
        result.bytesValue1_.makeImmutable();
        result.stringValue2_ = internalGetStringValue2();
        result.stringValue2_.makeImmutable();
        result.intValue2_ = internalGetIntValue2();
        result.intValue2_.makeImmutable();
        result.longValue2_ = internalGetLongValue2();
        result.longValue2_.makeImmutable();
        result.floatValue2_ = internalGetFloatValue2();
        result.floatValue2_.makeImmutable();
        result.doubleValue2_ = internalGetDoubleValue2();
        result.doubleValue2_.makeImmutable();
        result.booleanValue2_ = internalGetBooleanValue2();
        result.booleanValue2_.makeImmutable();
        result.bytesValue2_ = internalGetBytesValue2();
        result.bytesValue2_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ltv.aerospike.api.proto.QueryServices.QueryRequest) {
          return mergeFrom((com.ltv.aerospike.api.proto.QueryServices.QueryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ltv.aerospike.api.proto.QueryServices.QueryRequest other) {
        if (other == com.ltv.aerospike.api.proto.QueryServices.QueryRequest.getDefaultInstance()) return this;
        if (!other.getNamespace().isEmpty()) {
          namespace_ = other.namespace_;
          onChanged();
        }
        if (!other.getSet().isEmpty()) {
          set_ = other.set_;
          onChanged();
        }
        internalGetMutableFields().mergeFrom(
            other.internalGetFields());
        internalGetMutableFilter().mergeFrom(
            other.internalGetFilter());
        internalGetMutableStringValue1().mergeFrom(
            other.internalGetStringValue1());
        internalGetMutableIntValue1().mergeFrom(
            other.internalGetIntValue1());
        internalGetMutableLongValue1().mergeFrom(
            other.internalGetLongValue1());
        internalGetMutableFloatValue1().mergeFrom(
            other.internalGetFloatValue1());
        internalGetMutableDoubleValue1().mergeFrom(
            other.internalGetDoubleValue1());
        internalGetMutableBooleanValue1().mergeFrom(
            other.internalGetBooleanValue1());
        internalGetMutableBytesValue1().mergeFrom(
            other.internalGetBytesValue1());
        internalGetMutableStringValue2().mergeFrom(
            other.internalGetStringValue2());
        internalGetMutableIntValue2().mergeFrom(
            other.internalGetIntValue2());
        internalGetMutableLongValue2().mergeFrom(
            other.internalGetLongValue2());
        internalGetMutableFloatValue2().mergeFrom(
            other.internalGetFloatValue2());
        internalGetMutableDoubleValue2().mergeFrom(
            other.internalGetDoubleValue2());
        internalGetMutableBooleanValue2().mergeFrom(
            other.internalGetBooleanValue2());
        internalGetMutableBytesValue2().mergeFrom(
            other.internalGetBytesValue2());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ltv.aerospike.api.proto.QueryServices.QueryRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ltv.aerospike.api.proto.QueryServices.QueryRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object namespace_ = "";
      /**
       * <code>string namespace = 1;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <code>string namespace = 1;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object set_ = "";
      /**
       * <code>string set = 2;</code>
       * @return The set.
       */
      public java.lang.String getSet() {
        java.lang.Object ref = set_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          set_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string set = 2;</code>
       * @return The bytes for set.
       */
      public com.google.protobuf.ByteString
          getSetBytes() {
        java.lang.Object ref = set_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          set_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string set = 2;</code>
       * @param value The set to set.
       * @return This builder for chaining.
       */
      public Builder setSet(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        set_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string set = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSet() {
        
        set_ = getDefaultInstance().getSet();
        onChanged();
        return this;
      }
      /**
       * <code>string set = 2;</code>
       * @param value The bytes for set to set.
       * @return This builder for chaining.
       */
      public Builder setSetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        set_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> fields_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetFields() {
        if (fields_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FieldsDefaultEntryHolder.defaultEntry);
        }
        return fields_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableFields() {
        onChanged();;
        if (fields_ == null) {
          fields_ = com.google.protobuf.MapField.newMapField(
              FieldsDefaultEntryHolder.defaultEntry);
        }
        if (!fields_.isMutable()) {
          fields_ = fields_.copy();
        }
        return fields_;
      }

      public int getFieldsCount() {
        return internalGetFields().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; fields = 3;</code>
       */

      public boolean containsFields(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetFields().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFieldsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getFields() {
        return getFieldsMap();
      }
      /**
       * <code>map&lt;string, string&gt; fields = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getFieldsMap() {
        return internalGetFields().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; fields = 3;</code>
       */

      public java.lang.String getFieldsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetFields().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; fields = 3;</code>
       */

      public java.lang.String getFieldsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetFields().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFields() {
        internalGetMutableFields().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; fields = 3;</code>
       */

      public Builder removeFields(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFields().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableFields() {
        return internalGetMutableFields().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; fields = 3;</code>
       */
      public Builder putFields(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFields().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; fields = 3;</code>
       */

      public Builder putAllFields(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableFields().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> filter_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetFilter() {
        if (filter_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FilterDefaultEntryHolder.defaultEntry);
        }
        return filter_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableFilter() {
        onChanged();;
        if (filter_ == null) {
          filter_ = com.google.protobuf.MapField.newMapField(
              FilterDefaultEntryHolder.defaultEntry);
        }
        if (!filter_.isMutable()) {
          filter_ = filter_.copy();
        }
        return filter_;
      }

      public int getFilterCount() {
        return internalGetFilter().getMap().size();
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */

      public boolean containsFilter(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetFilter().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFilterMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation>
      getFilter() {
        return getFilterMap();
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */

      public java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation>
      getFilterMap() {
        return internalGetAdaptedFilterMap(
            internalGetFilter().getMap());}
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */

      public com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation getFilterOrDefault(
          java.lang.String key,
          com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetFilter().getMap();
        return map.containsKey(key)
               ? filterValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */

      public com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation getFilterOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetFilter().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return filterValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getFilterValueMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getFilterValue() {
        return getFilterValueMap();
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer>
      getFilterValueMap() {
        return internalGetFilter().getMap();
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */

      public int getFilterValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetFilter().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */

      public int getFilterValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetFilter().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFilter() {
        internalGetMutableFilter().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */

      public Builder removeFilter(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFilter().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation>
      getMutableFilter() {
        return internalGetAdaptedFilterMap(
             internalGetMutableFilter().getMutableMap());
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */
      public Builder putFilter(
          java.lang.String key,
          com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFilter().getMutableMap()
            .put(key, filterValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */
      public Builder putAllFilter(
          java.util.Map<java.lang.String, com.ltv.aerospike.api.proto.QueryServices.QueryRequest.FilterOperation> values) {
        internalGetAdaptedFilterMap(
            internalGetMutableFilter().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableFilterValue() {
        return internalGetMutableFilter().getMutableMap();
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */
      public Builder putFilterValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFilter().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .com.ltv.aerospike.api.proto.QueryRequest.FilterOperation&gt; filter = 4;</code>
       */
      public Builder putAllFilterValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableFilter().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> stringValue1_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetStringValue1() {
        if (stringValue1_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringValue1DefaultEntryHolder.defaultEntry);
        }
        return stringValue1_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableStringValue1() {
        onChanged();;
        if (stringValue1_ == null) {
          stringValue1_ = com.google.protobuf.MapField.newMapField(
              StringValue1DefaultEntryHolder.defaultEntry);
        }
        if (!stringValue1_.isMutable()) {
          stringValue1_ = stringValue1_.copy();
        }
        return stringValue1_;
      }

      public int getStringValue1Count() {
        return internalGetStringValue1().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
       */

      public boolean containsStringValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStringValue1().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringValue1Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getStringValue1() {
        return getStringValue1Map();
      }
      /**
       * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getStringValue1Map() {
        return internalGetStringValue1().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
       */

      public java.lang.String getStringValue1OrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringValue1().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
       */

      public java.lang.String getStringValue1OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringValue1().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringValue1() {
        internalGetMutableStringValue1().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
       */

      public Builder removeStringValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringValue1().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableStringValue1() {
        return internalGetMutableStringValue1().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
       */
      public Builder putStringValue1(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringValue1().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; stringValue1 = 5;</code>
       */

      public Builder putAllStringValue1(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableStringValue1().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> intValue1_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetIntValue1() {
        if (intValue1_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IntValue1DefaultEntryHolder.defaultEntry);
        }
        return intValue1_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableIntValue1() {
        onChanged();;
        if (intValue1_ == null) {
          intValue1_ = com.google.protobuf.MapField.newMapField(
              IntValue1DefaultEntryHolder.defaultEntry);
        }
        if (!intValue1_.isMutable()) {
          intValue1_ = intValue1_.copy();
        }
        return intValue1_;
      }

      public int getIntValue1Count() {
        return internalGetIntValue1().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
       */

      public boolean containsIntValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetIntValue1().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIntValue1Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getIntValue1() {
        return getIntValue1Map();
      }
      /**
       * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getIntValue1Map() {
        return internalGetIntValue1().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
       */

      public int getIntValue1OrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIntValue1().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
       */

      public int getIntValue1OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIntValue1().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearIntValue1() {
        internalGetMutableIntValue1().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
       */

      public Builder removeIntValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableIntValue1().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableIntValue1() {
        return internalGetMutableIntValue1().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
       */
      public Builder putIntValue1(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableIntValue1().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; intValue1 = 6;</code>
       */

      public Builder putAllIntValue1(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableIntValue1().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Long> longValue1_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
      internalGetLongValue1() {
        if (longValue1_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LongValue1DefaultEntryHolder.defaultEntry);
        }
        return longValue1_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
      internalGetMutableLongValue1() {
        onChanged();;
        if (longValue1_ == null) {
          longValue1_ = com.google.protobuf.MapField.newMapField(
              LongValue1DefaultEntryHolder.defaultEntry);
        }
        if (!longValue1_.isMutable()) {
          longValue1_ = longValue1_.copy();
        }
        return longValue1_;
      }

      public int getLongValue1Count() {
        return internalGetLongValue1().getMap().size();
      }
      /**
       * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
       */

      public boolean containsLongValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLongValue1().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLongValue1Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Long> getLongValue1() {
        return getLongValue1Map();
      }
      /**
       * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Long> getLongValue1Map() {
        return internalGetLongValue1().getMap();
      }
      /**
       * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
       */

      public long getLongValue1OrDefault(
          java.lang.String key,
          long defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Long> map =
            internalGetLongValue1().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
       */

      public long getLongValue1OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Long> map =
            internalGetLongValue1().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLongValue1() {
        internalGetMutableLongValue1().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
       */

      public Builder removeLongValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLongValue1().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Long>
      getMutableLongValue1() {
        return internalGetMutableLongValue1().getMutableMap();
      }
      /**
       * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
       */
      public Builder putLongValue1(
          java.lang.String key,
          long value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableLongValue1().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int64&gt; longValue1 = 7;</code>
       */

      public Builder putAllLongValue1(
          java.util.Map<java.lang.String, java.lang.Long> values) {
        internalGetMutableLongValue1().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Float> floatValue1_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetFloatValue1() {
        if (floatValue1_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FloatValue1DefaultEntryHolder.defaultEntry);
        }
        return floatValue1_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMutableFloatValue1() {
        onChanged();;
        if (floatValue1_ == null) {
          floatValue1_ = com.google.protobuf.MapField.newMapField(
              FloatValue1DefaultEntryHolder.defaultEntry);
        }
        if (!floatValue1_.isMutable()) {
          floatValue1_ = floatValue1_.copy();
        }
        return floatValue1_;
      }

      public int getFloatValue1Count() {
        return internalGetFloatValue1().getMap().size();
      }
      /**
       * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
       */

      public boolean containsFloatValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetFloatValue1().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFloatValue1Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float> getFloatValue1() {
        return getFloatValue1Map();
      }
      /**
       * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Float> getFloatValue1Map() {
        return internalGetFloatValue1().getMap();
      }
      /**
       * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
       */

      public float getFloatValue1OrDefault(
          java.lang.String key,
          float defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetFloatValue1().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
       */

      public float getFloatValue1OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetFloatValue1().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFloatValue1() {
        internalGetMutableFloatValue1().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
       */

      public Builder removeFloatValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFloatValue1().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float>
      getMutableFloatValue1() {
        return internalGetMutableFloatValue1().getMutableMap();
      }
      /**
       * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
       */
      public Builder putFloatValue1(
          java.lang.String key,
          float value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableFloatValue1().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; floatValue1 = 8;</code>
       */

      public Builder putAllFloatValue1(
          java.util.Map<java.lang.String, java.lang.Float> values) {
        internalGetMutableFloatValue1().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> doubleValue1_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetDoubleValue1() {
        if (doubleValue1_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DoubleValue1DefaultEntryHolder.defaultEntry);
        }
        return doubleValue1_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetMutableDoubleValue1() {
        onChanged();;
        if (doubleValue1_ == null) {
          doubleValue1_ = com.google.protobuf.MapField.newMapField(
              DoubleValue1DefaultEntryHolder.defaultEntry);
        }
        if (!doubleValue1_.isMutable()) {
          doubleValue1_ = doubleValue1_.copy();
        }
        return doubleValue1_;
      }

      public int getDoubleValue1Count() {
        return internalGetDoubleValue1().getMap().size();
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
       */

      public boolean containsDoubleValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetDoubleValue1().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDoubleValue1Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getDoubleValue1() {
        return getDoubleValue1Map();
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Double> getDoubleValue1Map() {
        return internalGetDoubleValue1().getMap();
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
       */

      public double getDoubleValue1OrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetDoubleValue1().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
       */

      public double getDoubleValue1OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetDoubleValue1().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDoubleValue1() {
        internalGetMutableDoubleValue1().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
       */

      public Builder removeDoubleValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableDoubleValue1().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
      getMutableDoubleValue1() {
        return internalGetMutableDoubleValue1().getMutableMap();
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
       */
      public Builder putDoubleValue1(
          java.lang.String key,
          double value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableDoubleValue1().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue1 = 9;</code>
       */

      public Builder putAllDoubleValue1(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutableDoubleValue1().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Boolean> booleanValue1_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
      internalGetBooleanValue1() {
        if (booleanValue1_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BooleanValue1DefaultEntryHolder.defaultEntry);
        }
        return booleanValue1_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
      internalGetMutableBooleanValue1() {
        onChanged();;
        if (booleanValue1_ == null) {
          booleanValue1_ = com.google.protobuf.MapField.newMapField(
              BooleanValue1DefaultEntryHolder.defaultEntry);
        }
        if (!booleanValue1_.isMutable()) {
          booleanValue1_ = booleanValue1_.copy();
        }
        return booleanValue1_;
      }

      public int getBooleanValue1Count() {
        return internalGetBooleanValue1().getMap().size();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
       */

      public boolean containsBooleanValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetBooleanValue1().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBooleanValue1Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanValue1() {
        return getBooleanValue1Map();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanValue1Map() {
        return internalGetBooleanValue1().getMap();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
       */

      public boolean getBooleanValue1OrDefault(
          java.lang.String key,
          boolean defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Boolean> map =
            internalGetBooleanValue1().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
       */

      public boolean getBooleanValue1OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Boolean> map =
            internalGetBooleanValue1().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBooleanValue1() {
        internalGetMutableBooleanValue1().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
       */

      public Builder removeBooleanValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBooleanValue1().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Boolean>
      getMutableBooleanValue1() {
        return internalGetMutableBooleanValue1().getMutableMap();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
       */
      public Builder putBooleanValue1(
          java.lang.String key,
          boolean value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableBooleanValue1().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue1 = 10;</code>
       */

      public Builder putAllBooleanValue1(
          java.util.Map<java.lang.String, java.lang.Boolean> values) {
        internalGetMutableBooleanValue1().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> bytesValue1_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetBytesValue1() {
        if (bytesValue1_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BytesValue1DefaultEntryHolder.defaultEntry);
        }
        return bytesValue1_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableBytesValue1() {
        onChanged();;
        if (bytesValue1_ == null) {
          bytesValue1_ = com.google.protobuf.MapField.newMapField(
              BytesValue1DefaultEntryHolder.defaultEntry);
        }
        if (!bytesValue1_.isMutable()) {
          bytesValue1_ = bytesValue1_.copy();
        }
        return bytesValue1_;
      }

      public int getBytesValue1Count() {
        return internalGetBytesValue1().getMap().size();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
       */

      public boolean containsBytesValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetBytesValue1().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBytesValue1Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesValue1() {
        return getBytesValue1Map();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesValue1Map() {
        return internalGetBytesValue1().getMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
       */

      public com.google.protobuf.ByteString getBytesValue1OrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetBytesValue1().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
       */

      public com.google.protobuf.ByteString getBytesValue1OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetBytesValue1().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBytesValue1() {
        internalGetMutableBytesValue1().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
       */

      public Builder removeBytesValue1(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBytesValue1().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableBytesValue1() {
        return internalGetMutableBytesValue1().getMutableMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
       */
      public Builder putBytesValue1(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBytesValue1().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue1 = 11;</code>
       */

      public Builder putAllBytesValue1(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableBytesValue1().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> stringValue2_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetStringValue2() {
        if (stringValue2_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringValue2DefaultEntryHolder.defaultEntry);
        }
        return stringValue2_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableStringValue2() {
        onChanged();;
        if (stringValue2_ == null) {
          stringValue2_ = com.google.protobuf.MapField.newMapField(
              StringValue2DefaultEntryHolder.defaultEntry);
        }
        if (!stringValue2_.isMutable()) {
          stringValue2_ = stringValue2_.copy();
        }
        return stringValue2_;
      }

      public int getStringValue2Count() {
        return internalGetStringValue2().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
       */

      public boolean containsStringValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStringValue2().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringValue2Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getStringValue2() {
        return getStringValue2Map();
      }
      /**
       * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getStringValue2Map() {
        return internalGetStringValue2().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
       */

      public java.lang.String getStringValue2OrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringValue2().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
       */

      public java.lang.String getStringValue2OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringValue2().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringValue2() {
        internalGetMutableStringValue2().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
       */

      public Builder removeStringValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringValue2().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableStringValue2() {
        return internalGetMutableStringValue2().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
       */
      public Builder putStringValue2(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringValue2().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; stringValue2 = 12;</code>
       */

      public Builder putAllStringValue2(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableStringValue2().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> intValue2_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetIntValue2() {
        if (intValue2_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IntValue2DefaultEntryHolder.defaultEntry);
        }
        return intValue2_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableIntValue2() {
        onChanged();;
        if (intValue2_ == null) {
          intValue2_ = com.google.protobuf.MapField.newMapField(
              IntValue2DefaultEntryHolder.defaultEntry);
        }
        if (!intValue2_.isMutable()) {
          intValue2_ = intValue2_.copy();
        }
        return intValue2_;
      }

      public int getIntValue2Count() {
        return internalGetIntValue2().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
       */

      public boolean containsIntValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetIntValue2().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIntValue2Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getIntValue2() {
        return getIntValue2Map();
      }
      /**
       * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getIntValue2Map() {
        return internalGetIntValue2().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
       */

      public int getIntValue2OrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIntValue2().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
       */

      public int getIntValue2OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIntValue2().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearIntValue2() {
        internalGetMutableIntValue2().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
       */

      public Builder removeIntValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableIntValue2().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableIntValue2() {
        return internalGetMutableIntValue2().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
       */
      public Builder putIntValue2(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableIntValue2().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; intValue2 = 13;</code>
       */

      public Builder putAllIntValue2(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableIntValue2().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Long> longValue2_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
      internalGetLongValue2() {
        if (longValue2_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LongValue2DefaultEntryHolder.defaultEntry);
        }
        return longValue2_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
      internalGetMutableLongValue2() {
        onChanged();;
        if (longValue2_ == null) {
          longValue2_ = com.google.protobuf.MapField.newMapField(
              LongValue2DefaultEntryHolder.defaultEntry);
        }
        if (!longValue2_.isMutable()) {
          longValue2_ = longValue2_.copy();
        }
        return longValue2_;
      }

      public int getLongValue2Count() {
        return internalGetLongValue2().getMap().size();
      }
      /**
       * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
       */

      public boolean containsLongValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLongValue2().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLongValue2Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Long> getLongValue2() {
        return getLongValue2Map();
      }
      /**
       * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Long> getLongValue2Map() {
        return internalGetLongValue2().getMap();
      }
      /**
       * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
       */

      public long getLongValue2OrDefault(
          java.lang.String key,
          long defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Long> map =
            internalGetLongValue2().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
       */

      public long getLongValue2OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Long> map =
            internalGetLongValue2().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLongValue2() {
        internalGetMutableLongValue2().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
       */

      public Builder removeLongValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLongValue2().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Long>
      getMutableLongValue2() {
        return internalGetMutableLongValue2().getMutableMap();
      }
      /**
       * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
       */
      public Builder putLongValue2(
          java.lang.String key,
          long value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableLongValue2().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int64&gt; longValue2 = 14;</code>
       */

      public Builder putAllLongValue2(
          java.util.Map<java.lang.String, java.lang.Long> values) {
        internalGetMutableLongValue2().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Float> floatValue2_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetFloatValue2() {
        if (floatValue2_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FloatValue2DefaultEntryHolder.defaultEntry);
        }
        return floatValue2_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMutableFloatValue2() {
        onChanged();;
        if (floatValue2_ == null) {
          floatValue2_ = com.google.protobuf.MapField.newMapField(
              FloatValue2DefaultEntryHolder.defaultEntry);
        }
        if (!floatValue2_.isMutable()) {
          floatValue2_ = floatValue2_.copy();
        }
        return floatValue2_;
      }

      public int getFloatValue2Count() {
        return internalGetFloatValue2().getMap().size();
      }
      /**
       * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
       */

      public boolean containsFloatValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetFloatValue2().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFloatValue2Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float> getFloatValue2() {
        return getFloatValue2Map();
      }
      /**
       * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Float> getFloatValue2Map() {
        return internalGetFloatValue2().getMap();
      }
      /**
       * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
       */

      public float getFloatValue2OrDefault(
          java.lang.String key,
          float defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetFloatValue2().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
       */

      public float getFloatValue2OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetFloatValue2().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFloatValue2() {
        internalGetMutableFloatValue2().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
       */

      public Builder removeFloatValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFloatValue2().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float>
      getMutableFloatValue2() {
        return internalGetMutableFloatValue2().getMutableMap();
      }
      /**
       * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
       */
      public Builder putFloatValue2(
          java.lang.String key,
          float value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableFloatValue2().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; floatValue2 = 15;</code>
       */

      public Builder putAllFloatValue2(
          java.util.Map<java.lang.String, java.lang.Float> values) {
        internalGetMutableFloatValue2().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> doubleValue2_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetDoubleValue2() {
        if (doubleValue2_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DoubleValue2DefaultEntryHolder.defaultEntry);
        }
        return doubleValue2_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetMutableDoubleValue2() {
        onChanged();;
        if (doubleValue2_ == null) {
          doubleValue2_ = com.google.protobuf.MapField.newMapField(
              DoubleValue2DefaultEntryHolder.defaultEntry);
        }
        if (!doubleValue2_.isMutable()) {
          doubleValue2_ = doubleValue2_.copy();
        }
        return doubleValue2_;
      }

      public int getDoubleValue2Count() {
        return internalGetDoubleValue2().getMap().size();
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
       */

      public boolean containsDoubleValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetDoubleValue2().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDoubleValue2Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getDoubleValue2() {
        return getDoubleValue2Map();
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Double> getDoubleValue2Map() {
        return internalGetDoubleValue2().getMap();
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
       */

      public double getDoubleValue2OrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetDoubleValue2().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
       */

      public double getDoubleValue2OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetDoubleValue2().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDoubleValue2() {
        internalGetMutableDoubleValue2().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
       */

      public Builder removeDoubleValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableDoubleValue2().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
      getMutableDoubleValue2() {
        return internalGetMutableDoubleValue2().getMutableMap();
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
       */
      public Builder putDoubleValue2(
          java.lang.String key,
          double value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableDoubleValue2().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; doubleValue2 = 16;</code>
       */

      public Builder putAllDoubleValue2(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutableDoubleValue2().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Boolean> booleanValue2_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
      internalGetBooleanValue2() {
        if (booleanValue2_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BooleanValue2DefaultEntryHolder.defaultEntry);
        }
        return booleanValue2_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
      internalGetMutableBooleanValue2() {
        onChanged();;
        if (booleanValue2_ == null) {
          booleanValue2_ = com.google.protobuf.MapField.newMapField(
              BooleanValue2DefaultEntryHolder.defaultEntry);
        }
        if (!booleanValue2_.isMutable()) {
          booleanValue2_ = booleanValue2_.copy();
        }
        return booleanValue2_;
      }

      public int getBooleanValue2Count() {
        return internalGetBooleanValue2().getMap().size();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
       */

      public boolean containsBooleanValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetBooleanValue2().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBooleanValue2Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanValue2() {
        return getBooleanValue2Map();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanValue2Map() {
        return internalGetBooleanValue2().getMap();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
       */

      public boolean getBooleanValue2OrDefault(
          java.lang.String key,
          boolean defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Boolean> map =
            internalGetBooleanValue2().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
       */

      public boolean getBooleanValue2OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Boolean> map =
            internalGetBooleanValue2().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBooleanValue2() {
        internalGetMutableBooleanValue2().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
       */

      public Builder removeBooleanValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBooleanValue2().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Boolean>
      getMutableBooleanValue2() {
        return internalGetMutableBooleanValue2().getMutableMap();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
       */
      public Builder putBooleanValue2(
          java.lang.String key,
          boolean value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableBooleanValue2().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanValue2 = 17;</code>
       */

      public Builder putAllBooleanValue2(
          java.util.Map<java.lang.String, java.lang.Boolean> values) {
        internalGetMutableBooleanValue2().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> bytesValue2_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetBytesValue2() {
        if (bytesValue2_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BytesValue2DefaultEntryHolder.defaultEntry);
        }
        return bytesValue2_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableBytesValue2() {
        onChanged();;
        if (bytesValue2_ == null) {
          bytesValue2_ = com.google.protobuf.MapField.newMapField(
              BytesValue2DefaultEntryHolder.defaultEntry);
        }
        if (!bytesValue2_.isMutable()) {
          bytesValue2_ = bytesValue2_.copy();
        }
        return bytesValue2_;
      }

      public int getBytesValue2Count() {
        return internalGetBytesValue2().getMap().size();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
       */

      public boolean containsBytesValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetBytesValue2().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBytesValue2Map()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesValue2() {
        return getBytesValue2Map();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesValue2Map() {
        return internalGetBytesValue2().getMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
       */

      public com.google.protobuf.ByteString getBytesValue2OrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetBytesValue2().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
       */

      public com.google.protobuf.ByteString getBytesValue2OrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetBytesValue2().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBytesValue2() {
        internalGetMutableBytesValue2().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
       */

      public Builder removeBytesValue2(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBytesValue2().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableBytesValue2() {
        return internalGetMutableBytesValue2().getMutableMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
       */
      public Builder putBytesValue2(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBytesValue2().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesValue2 = 18;</code>
       */

      public Builder putAllBytesValue2(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableBytesValue2().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ltv.aerospike.api.proto.QueryRequest)
    }

    // @@protoc_insertion_point(class_scope:com.ltv.aerospike.api.proto.QueryRequest)
    private static final com.ltv.aerospike.api.proto.QueryServices.QueryRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ltv.aerospike.api.proto.QueryServices.QueryRequest();
    }

    public static com.ltv.aerospike.api.proto.QueryServices.QueryRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryRequest>
        PARSER = new com.google.protobuf.AbstractParser<QueryRequest>() {
      @java.lang.Override
      public QueryRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QueryRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<QueryRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QueryRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.ltv.aerospike.api.proto.QueryServices.QueryRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QueryResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ltv.aerospike.api.proto.QueryResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 error_code = 1;</code>
     * @return The errorCode.
     */
    int getErrorCode();

    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */
    int getStringBinCount();
    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */
    boolean containsStringBin(
        java.lang.String key);
    /**
     * Use {@link #getStringBinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getStringBin();
    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getStringBinMap();
    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */

    java.lang.String getStringBinOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */

    java.lang.String getStringBinOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */
    int getIntBinCount();
    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */
    boolean containsIntBin(
        java.lang.String key);
    /**
     * Use {@link #getIntBinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntBin();
    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getIntBinMap();
    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */

    int getIntBinOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */

    int getIntBinOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */
    int getLongBinCount();
    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */
    boolean containsLongBin(
        java.lang.String key);
    /**
     * Use {@link #getLongBinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Long>
    getLongBin();
    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.Long>
    getLongBinMap();
    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */

    long getLongBinOrDefault(
        java.lang.String key,
        long defaultValue);
    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */

    long getLongBinOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */
    int getFloatBinCount();
    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */
    boolean containsFloatBin(
        java.lang.String key);
    /**
     * Use {@link #getFloatBinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Float>
    getFloatBin();
    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.Float>
    getFloatBinMap();
    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */

    float getFloatBinOrDefault(
        java.lang.String key,
        float defaultValue);
    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */

    float getFloatBinOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */
    int getDoubleBinCount();
    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */
    boolean containsDoubleBin(
        java.lang.String key);
    /**
     * Use {@link #getDoubleBinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getDoubleBin();
    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getDoubleBinMap();
    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */

    double getDoubleBinOrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */

    double getDoubleBinOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */
    int getBooleanBinCount();
    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */
    boolean containsBooleanBin(
        java.lang.String key);
    /**
     * Use {@link #getBooleanBinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Boolean>
    getBooleanBin();
    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.Boolean>
    getBooleanBinMap();
    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */

    boolean getBooleanBinOrDefault(
        java.lang.String key,
        boolean defaultValue);
    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */

    boolean getBooleanBinOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */
    int getBytesBinCount();
    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */
    boolean containsBytesBin(
        java.lang.String key);
    /**
     * Use {@link #getBytesBinMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getBytesBin();
    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getBytesBinMap();
    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */

    com.google.protobuf.ByteString getBytesBinOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */

    com.google.protobuf.ByteString getBytesBinOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code com.ltv.aerospike.api.proto.QueryResponse}
   */
  public  static final class QueryResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.ltv.aerospike.api.proto.QueryResponse)
      QueryResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QueryResponse.newBuilder() to construct.
    private QueryResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueryResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QueryResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private QueryResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              errorCode_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                stringBin_ = com.google.protobuf.MapField.newMapField(
                    StringBinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              stringBin__ = input.readMessage(
                  StringBinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stringBin_.getMutableMap().put(
                  stringBin__.getKey(), stringBin__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                intBin_ = com.google.protobuf.MapField.newMapField(
                    IntBinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              intBin__ = input.readMessage(
                  IntBinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              intBin_.getMutableMap().put(
                  intBin__.getKey(), intBin__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                longBin_ = com.google.protobuf.MapField.newMapField(
                    LongBinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
              longBin__ = input.readMessage(
                  LongBinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              longBin_.getMutableMap().put(
                  longBin__.getKey(), longBin__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                floatBin_ = com.google.protobuf.MapField.newMapField(
                    FloatBinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
              floatBin__ = input.readMessage(
                  FloatBinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              floatBin_.getMutableMap().put(
                  floatBin__.getKey(), floatBin__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                doubleBin_ = com.google.protobuf.MapField.newMapField(
                    DoubleBinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
              doubleBin__ = input.readMessage(
                  DoubleBinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              doubleBin_.getMutableMap().put(
                  doubleBin__.getKey(), doubleBin__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                booleanBin_ = com.google.protobuf.MapField.newMapField(
                    BooleanBinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
              booleanBin__ = input.readMessage(
                  BooleanBinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              booleanBin_.getMutableMap().put(
                  booleanBin__.getKey(), booleanBin__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                bytesBin_ = com.google.protobuf.MapField.newMapField(
                    BytesBinDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              bytesBin__ = input.readMessage(
                  BytesBinDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bytesBin_.getMutableMap().put(
                  bytesBin__.getKey(), bytesBin__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetStringBin();
        case 3:
          return internalGetIntBin();
        case 4:
          return internalGetLongBin();
        case 5:
          return internalGetFloatBin();
        case 6:
          return internalGetDoubleBin();
        case 7:
          return internalGetBooleanBin();
        case 8:
          return internalGetBytesBin();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ltv.aerospike.api.proto.QueryServices.QueryResponse.class, com.ltv.aerospike.api.proto.QueryServices.QueryResponse.Builder.class);
    }

    public static final int ERROR_CODE_FIELD_NUMBER = 1;
    private int errorCode_;
    /**
     * <code>int32 error_code = 1;</code>
     * @return The errorCode.
     */
    public int getErrorCode() {
      return errorCode_;
    }

    public static final int STRINGBIN_FIELD_NUMBER = 2;
    private static final class StringBinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_StringBinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> stringBin_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetStringBin() {
      if (stringBin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StringBinDefaultEntryHolder.defaultEntry);
      }
      return stringBin_;
    }

    public int getStringBinCount() {
      return internalGetStringBin().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */

    public boolean containsStringBin(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStringBin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStringBinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStringBin() {
      return getStringBinMap();
    }
    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getStringBinMap() {
      return internalGetStringBin().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */

    public java.lang.String getStringBinOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringBin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; stringBin = 2;</code>
     */

    public java.lang.String getStringBinOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStringBin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INTBIN_FIELD_NUMBER = 3;
    private static final class IntBinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_IntBinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> intBin_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetIntBin() {
      if (intBin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntBinDefaultEntryHolder.defaultEntry);
      }
      return intBin_;
    }

    public int getIntBinCount() {
      return internalGetIntBin().getMap().size();
    }
    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */

    public boolean containsIntBin(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetIntBin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntBinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getIntBin() {
      return getIntBinMap();
    }
    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getIntBinMap() {
      return internalGetIntBin().getMap();
    }
    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */

    public int getIntBinOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIntBin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; intBin = 3;</code>
     */

    public int getIntBinOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIntBin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LONGBIN_FIELD_NUMBER = 4;
    private static final class LongBinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Long>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_LongBinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Long> longBin_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetLongBin() {
      if (longBin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LongBinDefaultEntryHolder.defaultEntry);
      }
      return longBin_;
    }

    public int getLongBinCount() {
      return internalGetLongBin().getMap().size();
    }
    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */

    public boolean containsLongBin(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLongBin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLongBinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long> getLongBin() {
      return getLongBinMap();
    }
    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Long> getLongBinMap() {
      return internalGetLongBin().getMap();
    }
    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */

    public long getLongBinOrDefault(
        java.lang.String key,
        long defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetLongBin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int64&gt; longBin = 4;</code>
     */

    public long getLongBinOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetLongBin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FLOATBIN_FIELD_NUMBER = 5;
    private static final class FloatBinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Float>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_FloatBinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Float> floatBin_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
    internalGetFloatBin() {
      if (floatBin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FloatBinDefaultEntryHolder.defaultEntry);
      }
      return floatBin_;
    }

    public int getFloatBinCount() {
      return internalGetFloatBin().getMap().size();
    }
    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */

    public boolean containsFloatBin(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetFloatBin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFloatBinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Float> getFloatBin() {
      return getFloatBinMap();
    }
    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Float> getFloatBinMap() {
      return internalGetFloatBin().getMap();
    }
    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */

    public float getFloatBinOrDefault(
        java.lang.String key,
        float defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetFloatBin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, float&gt; floatBin = 5;</code>
     */

    public float getFloatBinOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Float> map =
          internalGetFloatBin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DOUBLEBIN_FIELD_NUMBER = 6;
    private static final class DoubleBinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_DoubleBinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> doubleBin_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetDoubleBin() {
      if (doubleBin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DoubleBinDefaultEntryHolder.defaultEntry);
      }
      return doubleBin_;
    }

    public int getDoubleBinCount() {
      return internalGetDoubleBin().getMap().size();
    }
    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */

    public boolean containsDoubleBin(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetDoubleBin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDoubleBinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getDoubleBin() {
      return getDoubleBinMap();
    }
    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Double> getDoubleBinMap() {
      return internalGetDoubleBin().getMap();
    }
    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */

    public double getDoubleBinOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleBin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, double&gt; doubleBin = 6;</code>
     */

    public double getDoubleBinOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleBin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BOOLEANBIN_FIELD_NUMBER = 7;
    private static final class BooleanBinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Boolean> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Boolean>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_BooleanBinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BOOL,
                  false);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Boolean> booleanBin_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
    internalGetBooleanBin() {
      if (booleanBin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BooleanBinDefaultEntryHolder.defaultEntry);
      }
      return booleanBin_;
    }

    public int getBooleanBinCount() {
      return internalGetBooleanBin().getMap().size();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */

    public boolean containsBooleanBin(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBooleanBin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBooleanBinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanBin() {
      return getBooleanBinMap();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanBinMap() {
      return internalGetBooleanBin().getMap();
    }
    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */

    public boolean getBooleanBinOrDefault(
        java.lang.String key,
        boolean defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetBooleanBin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
     */

    public boolean getBooleanBinOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Boolean> map =
          internalGetBooleanBin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BYTESBIN_FIELD_NUMBER = 8;
    private static final class BytesBinDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_BytesBinEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> bytesBin_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetBytesBin() {
      if (bytesBin_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BytesBinDefaultEntryHolder.defaultEntry);
      }
      return bytesBin_;
    }

    public int getBytesBinCount() {
      return internalGetBytesBin().getMap().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */

    public boolean containsBytesBin(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBytesBin().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBytesBinMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesBin() {
      return getBytesBinMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesBinMap() {
      return internalGetBytesBin().getMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */

    public com.google.protobuf.ByteString getBytesBinOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetBytesBin().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
     */

    public com.google.protobuf.ByteString getBytesBinOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetBytesBin().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (errorCode_ != 0) {
        output.writeInt32(1, errorCode_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStringBin(),
          StringBinDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetIntBin(),
          IntBinDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLongBin(),
          LongBinDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetFloatBin(),
          FloatBinDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetDoubleBin(),
          DoubleBinDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetBooleanBin(),
          BooleanBinDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetBytesBin(),
          BytesBinDefaultEntryHolder.defaultEntry,
          8);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (errorCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, errorCode_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetStringBin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        stringBin__ = StringBinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, stringBin__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetIntBin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        intBin__ = IntBinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, intBin__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
           : internalGetLongBin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
        longBin__ = LongBinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, longBin__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Float> entry
           : internalGetFloatBin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Float>
        floatBin__ = FloatBinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, floatBin__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetDoubleBin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        doubleBin__ = DoubleBinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, doubleBin__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Boolean> entry
           : internalGetBooleanBin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
        booleanBin__ = BooleanBinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, booleanBin__);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetBytesBin().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        bytesBin__ = BytesBinDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, bytesBin__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ltv.aerospike.api.proto.QueryServices.QueryResponse)) {
        return super.equals(obj);
      }
      com.ltv.aerospike.api.proto.QueryServices.QueryResponse other = (com.ltv.aerospike.api.proto.QueryServices.QueryResponse) obj;

      if (getErrorCode()
          != other.getErrorCode()) return false;
      if (!internalGetStringBin().equals(
          other.internalGetStringBin())) return false;
      if (!internalGetIntBin().equals(
          other.internalGetIntBin())) return false;
      if (!internalGetLongBin().equals(
          other.internalGetLongBin())) return false;
      if (!internalGetFloatBin().equals(
          other.internalGetFloatBin())) return false;
      if (!internalGetDoubleBin().equals(
          other.internalGetDoubleBin())) return false;
      if (!internalGetBooleanBin().equals(
          other.internalGetBooleanBin())) return false;
      if (!internalGetBytesBin().equals(
          other.internalGetBytesBin())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getErrorCode();
      if (!internalGetStringBin().getMap().isEmpty()) {
        hash = (37 * hash) + STRINGBIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStringBin().hashCode();
      }
      if (!internalGetIntBin().getMap().isEmpty()) {
        hash = (37 * hash) + INTBIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetIntBin().hashCode();
      }
      if (!internalGetLongBin().getMap().isEmpty()) {
        hash = (37 * hash) + LONGBIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLongBin().hashCode();
      }
      if (!internalGetFloatBin().getMap().isEmpty()) {
        hash = (37 * hash) + FLOATBIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFloatBin().hashCode();
      }
      if (!internalGetDoubleBin().getMap().isEmpty()) {
        hash = (37 * hash) + DOUBLEBIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDoubleBin().hashCode();
      }
      if (!internalGetBooleanBin().getMap().isEmpty()) {
        hash = (37 * hash) + BOOLEANBIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBooleanBin().hashCode();
      }
      if (!internalGetBytesBin().getMap().isEmpty()) {
        hash = (37 * hash) + BYTESBIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBytesBin().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ltv.aerospike.api.proto.QueryServices.QueryResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ltv.aerospike.api.proto.QueryResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ltv.aerospike.api.proto.QueryResponse)
        com.ltv.aerospike.api.proto.QueryServices.QueryResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetStringBin();
          case 3:
            return internalGetIntBin();
          case 4:
            return internalGetLongBin();
          case 5:
            return internalGetFloatBin();
          case 6:
            return internalGetDoubleBin();
          case 7:
            return internalGetBooleanBin();
          case 8:
            return internalGetBytesBin();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableStringBin();
          case 3:
            return internalGetMutableIntBin();
          case 4:
            return internalGetMutableLongBin();
          case 5:
            return internalGetMutableFloatBin();
          case 6:
            return internalGetMutableDoubleBin();
          case 7:
            return internalGetMutableBooleanBin();
          case 8:
            return internalGetMutableBytesBin();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ltv.aerospike.api.proto.QueryServices.QueryResponse.class, com.ltv.aerospike.api.proto.QueryServices.QueryResponse.Builder.class);
      }

      // Construct using com.ltv.aerospike.api.proto.QueryServices.QueryResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        errorCode_ = 0;

        internalGetMutableStringBin().clear();
        internalGetMutableIntBin().clear();
        internalGetMutableLongBin().clear();
        internalGetMutableFloatBin().clear();
        internalGetMutableDoubleBin().clear();
        internalGetMutableBooleanBin().clear();
        internalGetMutableBytesBin().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ltv.aerospike.api.proto.QueryServices.internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor;
      }

      @java.lang.Override
      public com.ltv.aerospike.api.proto.QueryServices.QueryResponse getDefaultInstanceForType() {
        return com.ltv.aerospike.api.proto.QueryServices.QueryResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.ltv.aerospike.api.proto.QueryServices.QueryResponse build() {
        com.ltv.aerospike.api.proto.QueryServices.QueryResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.ltv.aerospike.api.proto.QueryServices.QueryResponse buildPartial() {
        com.ltv.aerospike.api.proto.QueryServices.QueryResponse result = new com.ltv.aerospike.api.proto.QueryServices.QueryResponse(this);
        int from_bitField0_ = bitField0_;
        result.errorCode_ = errorCode_;
        result.stringBin_ = internalGetStringBin();
        result.stringBin_.makeImmutable();
        result.intBin_ = internalGetIntBin();
        result.intBin_.makeImmutable();
        result.longBin_ = internalGetLongBin();
        result.longBin_.makeImmutable();
        result.floatBin_ = internalGetFloatBin();
        result.floatBin_.makeImmutable();
        result.doubleBin_ = internalGetDoubleBin();
        result.doubleBin_.makeImmutable();
        result.booleanBin_ = internalGetBooleanBin();
        result.booleanBin_.makeImmutable();
        result.bytesBin_ = internalGetBytesBin();
        result.bytesBin_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ltv.aerospike.api.proto.QueryServices.QueryResponse) {
          return mergeFrom((com.ltv.aerospike.api.proto.QueryServices.QueryResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ltv.aerospike.api.proto.QueryServices.QueryResponse other) {
        if (other == com.ltv.aerospike.api.proto.QueryServices.QueryResponse.getDefaultInstance()) return this;
        if (other.getErrorCode() != 0) {
          setErrorCode(other.getErrorCode());
        }
        internalGetMutableStringBin().mergeFrom(
            other.internalGetStringBin());
        internalGetMutableIntBin().mergeFrom(
            other.internalGetIntBin());
        internalGetMutableLongBin().mergeFrom(
            other.internalGetLongBin());
        internalGetMutableFloatBin().mergeFrom(
            other.internalGetFloatBin());
        internalGetMutableDoubleBin().mergeFrom(
            other.internalGetDoubleBin());
        internalGetMutableBooleanBin().mergeFrom(
            other.internalGetBooleanBin());
        internalGetMutableBytesBin().mergeFrom(
            other.internalGetBytesBin());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ltv.aerospike.api.proto.QueryServices.QueryResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ltv.aerospike.api.proto.QueryServices.QueryResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int errorCode_ ;
      /**
       * <code>int32 error_code = 1;</code>
       * @return The errorCode.
       */
      public int getErrorCode() {
        return errorCode_;
      }
      /**
       * <code>int32 error_code = 1;</code>
       * @param value The errorCode to set.
       * @return This builder for chaining.
       */
      public Builder setErrorCode(int value) {
        
        errorCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 error_code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorCode() {
        
        errorCode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> stringBin_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetStringBin() {
        if (stringBin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StringBinDefaultEntryHolder.defaultEntry);
        }
        return stringBin_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableStringBin() {
        onChanged();;
        if (stringBin_ == null) {
          stringBin_ = com.google.protobuf.MapField.newMapField(
              StringBinDefaultEntryHolder.defaultEntry);
        }
        if (!stringBin_.isMutable()) {
          stringBin_ = stringBin_.copy();
        }
        return stringBin_;
      }

      public int getStringBinCount() {
        return internalGetStringBin().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; stringBin = 2;</code>
       */

      public boolean containsStringBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStringBin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStringBinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getStringBin() {
        return getStringBinMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringBin = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getStringBinMap() {
        return internalGetStringBin().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringBin = 2;</code>
       */

      public java.lang.String getStringBinOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringBin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; stringBin = 2;</code>
       */

      public java.lang.String getStringBinOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStringBin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStringBin() {
        internalGetMutableStringBin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; stringBin = 2;</code>
       */

      public Builder removeStringBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringBin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableStringBin() {
        return internalGetMutableStringBin().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; stringBin = 2;</code>
       */
      public Builder putStringBin(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStringBin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; stringBin = 2;</code>
       */

      public Builder putAllStringBin(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableStringBin().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> intBin_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetIntBin() {
        if (intBin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              IntBinDefaultEntryHolder.defaultEntry);
        }
        return intBin_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableIntBin() {
        onChanged();;
        if (intBin_ == null) {
          intBin_ = com.google.protobuf.MapField.newMapField(
              IntBinDefaultEntryHolder.defaultEntry);
        }
        if (!intBin_.isMutable()) {
          intBin_ = intBin_.copy();
        }
        return intBin_;
      }

      public int getIntBinCount() {
        return internalGetIntBin().getMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; intBin = 3;</code>
       */

      public boolean containsIntBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetIntBin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getIntBinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getIntBin() {
        return getIntBinMap();
      }
      /**
       * <code>map&lt;string, int32&gt; intBin = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getIntBinMap() {
        return internalGetIntBin().getMap();
      }
      /**
       * <code>map&lt;string, int32&gt; intBin = 3;</code>
       */

      public int getIntBinOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIntBin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; intBin = 3;</code>
       */

      public int getIntBinOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetIntBin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearIntBin() {
        internalGetMutableIntBin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; intBin = 3;</code>
       */

      public Builder removeIntBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableIntBin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableIntBin() {
        return internalGetMutableIntBin().getMutableMap();
      }
      /**
       * <code>map&lt;string, int32&gt; intBin = 3;</code>
       */
      public Builder putIntBin(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableIntBin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; intBin = 3;</code>
       */

      public Builder putAllIntBin(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableIntBin().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Long> longBin_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
      internalGetLongBin() {
        if (longBin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LongBinDefaultEntryHolder.defaultEntry);
        }
        return longBin_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
      internalGetMutableLongBin() {
        onChanged();;
        if (longBin_ == null) {
          longBin_ = com.google.protobuf.MapField.newMapField(
              LongBinDefaultEntryHolder.defaultEntry);
        }
        if (!longBin_.isMutable()) {
          longBin_ = longBin_.copy();
        }
        return longBin_;
      }

      public int getLongBinCount() {
        return internalGetLongBin().getMap().size();
      }
      /**
       * <code>map&lt;string, int64&gt; longBin = 4;</code>
       */

      public boolean containsLongBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLongBin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLongBinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Long> getLongBin() {
        return getLongBinMap();
      }
      /**
       * <code>map&lt;string, int64&gt; longBin = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Long> getLongBinMap() {
        return internalGetLongBin().getMap();
      }
      /**
       * <code>map&lt;string, int64&gt; longBin = 4;</code>
       */

      public long getLongBinOrDefault(
          java.lang.String key,
          long defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Long> map =
            internalGetLongBin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int64&gt; longBin = 4;</code>
       */

      public long getLongBinOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Long> map =
            internalGetLongBin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLongBin() {
        internalGetMutableLongBin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, int64&gt; longBin = 4;</code>
       */

      public Builder removeLongBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLongBin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Long>
      getMutableLongBin() {
        return internalGetMutableLongBin().getMutableMap();
      }
      /**
       * <code>map&lt;string, int64&gt; longBin = 4;</code>
       */
      public Builder putLongBin(
          java.lang.String key,
          long value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableLongBin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int64&gt; longBin = 4;</code>
       */

      public Builder putAllLongBin(
          java.util.Map<java.lang.String, java.lang.Long> values) {
        internalGetMutableLongBin().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Float> floatBin_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetFloatBin() {
        if (floatBin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FloatBinDefaultEntryHolder.defaultEntry);
        }
        return floatBin_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Float>
      internalGetMutableFloatBin() {
        onChanged();;
        if (floatBin_ == null) {
          floatBin_ = com.google.protobuf.MapField.newMapField(
              FloatBinDefaultEntryHolder.defaultEntry);
        }
        if (!floatBin_.isMutable()) {
          floatBin_ = floatBin_.copy();
        }
        return floatBin_;
      }

      public int getFloatBinCount() {
        return internalGetFloatBin().getMap().size();
      }
      /**
       * <code>map&lt;string, float&gt; floatBin = 5;</code>
       */

      public boolean containsFloatBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetFloatBin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFloatBinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float> getFloatBin() {
        return getFloatBinMap();
      }
      /**
       * <code>map&lt;string, float&gt; floatBin = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Float> getFloatBinMap() {
        return internalGetFloatBin().getMap();
      }
      /**
       * <code>map&lt;string, float&gt; floatBin = 5;</code>
       */

      public float getFloatBinOrDefault(
          java.lang.String key,
          float defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetFloatBin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, float&gt; floatBin = 5;</code>
       */

      public float getFloatBinOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Float> map =
            internalGetFloatBin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFloatBin() {
        internalGetMutableFloatBin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; floatBin = 5;</code>
       */

      public Builder removeFloatBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFloatBin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Float>
      getMutableFloatBin() {
        return internalGetMutableFloatBin().getMutableMap();
      }
      /**
       * <code>map&lt;string, float&gt; floatBin = 5;</code>
       */
      public Builder putFloatBin(
          java.lang.String key,
          float value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableFloatBin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, float&gt; floatBin = 5;</code>
       */

      public Builder putAllFloatBin(
          java.util.Map<java.lang.String, java.lang.Float> values) {
        internalGetMutableFloatBin().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> doubleBin_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetDoubleBin() {
        if (doubleBin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DoubleBinDefaultEntryHolder.defaultEntry);
        }
        return doubleBin_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetMutableDoubleBin() {
        onChanged();;
        if (doubleBin_ == null) {
          doubleBin_ = com.google.protobuf.MapField.newMapField(
              DoubleBinDefaultEntryHolder.defaultEntry);
        }
        if (!doubleBin_.isMutable()) {
          doubleBin_ = doubleBin_.copy();
        }
        return doubleBin_;
      }

      public int getDoubleBinCount() {
        return internalGetDoubleBin().getMap().size();
      }
      /**
       * <code>map&lt;string, double&gt; doubleBin = 6;</code>
       */

      public boolean containsDoubleBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetDoubleBin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDoubleBinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getDoubleBin() {
        return getDoubleBinMap();
      }
      /**
       * <code>map&lt;string, double&gt; doubleBin = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Double> getDoubleBinMap() {
        return internalGetDoubleBin().getMap();
      }
      /**
       * <code>map&lt;string, double&gt; doubleBin = 6;</code>
       */

      public double getDoubleBinOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetDoubleBin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, double&gt; doubleBin = 6;</code>
       */

      public double getDoubleBinOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetDoubleBin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDoubleBin() {
        internalGetMutableDoubleBin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; doubleBin = 6;</code>
       */

      public Builder removeDoubleBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableDoubleBin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
      getMutableDoubleBin() {
        return internalGetMutableDoubleBin().getMutableMap();
      }
      /**
       * <code>map&lt;string, double&gt; doubleBin = 6;</code>
       */
      public Builder putDoubleBin(
          java.lang.String key,
          double value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableDoubleBin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; doubleBin = 6;</code>
       */

      public Builder putAllDoubleBin(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutableDoubleBin().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Boolean> booleanBin_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
      internalGetBooleanBin() {
        if (booleanBin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BooleanBinDefaultEntryHolder.defaultEntry);
        }
        return booleanBin_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
      internalGetMutableBooleanBin() {
        onChanged();;
        if (booleanBin_ == null) {
          booleanBin_ = com.google.protobuf.MapField.newMapField(
              BooleanBinDefaultEntryHolder.defaultEntry);
        }
        if (!booleanBin_.isMutable()) {
          booleanBin_ = booleanBin_.copy();
        }
        return booleanBin_;
      }

      public int getBooleanBinCount() {
        return internalGetBooleanBin().getMap().size();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
       */

      public boolean containsBooleanBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetBooleanBin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBooleanBinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanBin() {
        return getBooleanBinMap();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Boolean> getBooleanBinMap() {
        return internalGetBooleanBin().getMap();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
       */

      public boolean getBooleanBinOrDefault(
          java.lang.String key,
          boolean defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Boolean> map =
            internalGetBooleanBin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
       */

      public boolean getBooleanBinOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Boolean> map =
            internalGetBooleanBin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBooleanBin() {
        internalGetMutableBooleanBin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
       */

      public Builder removeBooleanBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBooleanBin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Boolean>
      getMutableBooleanBin() {
        return internalGetMutableBooleanBin().getMutableMap();
      }
      /**
       * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
       */
      public Builder putBooleanBin(
          java.lang.String key,
          boolean value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableBooleanBin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bool&gt; booleanBin = 7;</code>
       */

      public Builder putAllBooleanBin(
          java.util.Map<java.lang.String, java.lang.Boolean> values) {
        internalGetMutableBooleanBin().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> bytesBin_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetBytesBin() {
        if (bytesBin_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BytesBinDefaultEntryHolder.defaultEntry);
        }
        return bytesBin_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableBytesBin() {
        onChanged();;
        if (bytesBin_ == null) {
          bytesBin_ = com.google.protobuf.MapField.newMapField(
              BytesBinDefaultEntryHolder.defaultEntry);
        }
        if (!bytesBin_.isMutable()) {
          bytesBin_ = bytesBin_.copy();
        }
        return bytesBin_;
      }

      public int getBytesBinCount() {
        return internalGetBytesBin().getMap().size();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
       */

      public boolean containsBytesBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetBytesBin().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBytesBinMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesBin() {
        return getBytesBinMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getBytesBinMap() {
        return internalGetBytesBin().getMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
       */

      public com.google.protobuf.ByteString getBytesBinOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetBytesBin().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
       */

      public com.google.protobuf.ByteString getBytesBinOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetBytesBin().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBytesBin() {
        internalGetMutableBytesBin().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
       */

      public Builder removeBytesBin(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBytesBin().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableBytesBin() {
        return internalGetMutableBytesBin().getMutableMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
       */
      public Builder putBytesBin(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBytesBin().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; bytesBin = 8;</code>
       */

      public Builder putAllBytesBin(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableBytesBin().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ltv.aerospike.api.proto.QueryResponse)
    }

    // @@protoc_insertion_point(class_scope:com.ltv.aerospike.api.proto.QueryResponse)
    private static final com.ltv.aerospike.api.proto.QueryServices.QueryResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ltv.aerospike.api.proto.QueryServices.QueryResponse();
    }

    public static com.ltv.aerospike.api.proto.QueryServices.QueryResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryResponse>
        PARSER = new com.google.protobuf.AbstractParser<QueryResponse>() {
      @java.lang.Override
      public QueryResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QueryResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<QueryResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QueryResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.ltv.aerospike.api.proto.QueryServices.QueryResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FieldsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_FieldsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FilterEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_FilterEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue1Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue1Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue1Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue1Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue1Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue1Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue1Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue1Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue1Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue1Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue1Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue1Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue1Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue1Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue2Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue2Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue2Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue2Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue2Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue2Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue2Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue2Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue2Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue2Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue2Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue2Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue2Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue2Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_StringBinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_StringBinEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_IntBinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_IntBinEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_LongBinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_LongBinEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_FloatBinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_FloatBinEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_DoubleBinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_DoubleBinEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_BooleanBinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_BooleanBinEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_BytesBinEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_BytesBinEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023QueryServices.proto\022\033com.ltv.aerospike" +
      ".api.proto\"\324\023\n\014QueryRequest\022\021\n\tnamespace" +
      "\030\001 \001(\t\022\013\n\003set\030\002 \001(\t\022E\n\006fields\030\003 \003(\01325.co" +
      "m.ltv.aerospike.api.proto.QueryRequest.F" +
      "ieldsEntry\022E\n\006filter\030\004 \003(\01325.com.ltv.aer" +
      "ospike.api.proto.QueryRequest.FilterEntr" +
      "y\022Q\n\014stringValue1\030\005 \003(\0132;.com.ltv.aerosp" +
      "ike.api.proto.QueryRequest.StringValue1E" +
      "ntry\022K\n\tintValue1\030\006 \003(\01328.com.ltv.aerosp" +
      "ike.api.proto.QueryRequest.IntValue1Entr" +
      "y\022M\n\nlongValue1\030\007 \003(\01329.com.ltv.aerospik" +
      "e.api.proto.QueryRequest.LongValue1Entry" +
      "\022O\n\013floatValue1\030\010 \003(\0132:.com.ltv.aerospik" +
      "e.api.proto.QueryRequest.FloatValue1Entr" +
      "y\022Q\n\014doubleValue1\030\t \003(\0132;.com.ltv.aerosp" +
      "ike.api.proto.QueryRequest.DoubleValue1E" +
      "ntry\022S\n\rbooleanValue1\030\n \003(\0132<.com.ltv.ae" +
      "rospike.api.proto.QueryRequest.BooleanVa" +
      "lue1Entry\022O\n\013bytesValue1\030\013 \003(\0132:.com.ltv" +
      ".aerospike.api.proto.QueryRequest.BytesV" +
      "alue1Entry\022Q\n\014stringValue2\030\014 \003(\0132;.com.l" +
      "tv.aerospike.api.proto.QueryRequest.Stri" +
      "ngValue2Entry\022K\n\tintValue2\030\r \003(\01328.com.l" +
      "tv.aerospike.api.proto.QueryRequest.IntV" +
      "alue2Entry\022M\n\nlongValue2\030\016 \003(\01329.com.ltv" +
      ".aerospike.api.proto.QueryRequest.LongVa" +
      "lue2Entry\022O\n\013floatValue2\030\017 \003(\0132:.com.ltv" +
      ".aerospike.api.proto.QueryRequest.FloatV" +
      "alue2Entry\022Q\n\014doubleValue2\030\020 \003(\0132;.com.l" +
      "tv.aerospike.api.proto.QueryRequest.Doub" +
      "leValue2Entry\022S\n\rbooleanValue2\030\021 \003(\0132<.c" +
      "om.ltv.aerospike.api.proto.QueryRequest." +
      "BooleanValue2Entry\022O\n\013bytesValue2\030\022 \003(\0132" +
      ":.com.ltv.aerospike.api.proto.QueryReque" +
      "st.BytesValue2Entry\032-\n\013FieldsEntry\022\013\n\003ke" +
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032h\n\013FilterEntr" +
      "y\022\013\n\003key\030\001 \001(\t\022H\n\005value\030\002 \001(\01629.com.ltv." +
      "aerospike.api.proto.QueryRequest.FilterO" +
      "peration:\0028\001\0323\n\021StringValue1Entry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016IntValue1En" +
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\0321\n\017L" +
      "ongValue1Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001" +
      "(\003:\0028\001\0322\n\020FloatValue1Entry\022\013\n\003key\030\001 \001(\t\022" +
      "\r\n\005value\030\002 \001(\002:\0028\001\0323\n\021DoubleValue1Entry\022" +
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\0324\n\022Boole" +
      "anValue1Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(" +
      "\010:\0028\001\0322\n\020BytesValue1Entry\022\013\n\003key\030\001 \001(\t\022\r" +
      "\n\005value\030\002 \001(\014:\0028\001\0323\n\021StringValue2Entry\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016IntVal" +
      "ue2Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001" +
      "\0321\n\017LongValue2Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu" +
      "e\030\002 \001(\003:\0028\001\0322\n\020FloatValue2Entry\022\013\n\003key\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\002:\0028\001\0323\n\021DoubleValue2E" +
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\0324\n\022" +
      "BooleanValue2Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value" +
      "\030\002 \001(\010:\0028\001\0322\n\020BytesValue2Entry\022\013\n\003key\030\001 " +
      "\001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\260\002\n\017FilterOperati" +
      "on\022\006\n\002EQ\020\000\022\006\n\002GT\020\001\022\010\n\004GTEQ\020\002\022\006\n\002LT\020\003\022\010\n\004" +
      "LTEQ\020\004\022\t\n\005NOTEQ\020\005\022\013\n\007BETWEEN\020\006\022\016\n\nSTART_" +
      "WITH\020\007\022\r\n\tENDS_WITH\020\010\022\016\n\nCONTAINING\020\t\022\006\n" +
      "\002IN\020\n\022\021\n\rLIST_CONTAINS\020\013\022\025\n\021MAP_KEYS_CON" +
      "TAINS\020\014\022\027\n\023MAP_VALUES_CONTAINS\020\r\022\020\n\014LIST" +
      "_BETWEEN\020\016\022\024\n\020MAP_KEYS_BETWEEN\020\017\022\026\n\022MAP_" +
      "VALUES_BETWEEN\020\020\022\016\n\nGEO_WITHIN\020\021\022\006\n\002OR\020\022" +
      "\022\007\n\003AND\020\023\"\221\007\n\rQueryResponse\022\022\n\nerror_cod" +
      "e\030\001 \001(\005\022L\n\tstringBin\030\002 \003(\01329.com.ltv.aer" +
      "ospike.api.proto.QueryResponse.StringBin" +
      "Entry\022F\n\006intBin\030\003 \003(\01326.com.ltv.aerospik" +
      "e.api.proto.QueryResponse.IntBinEntry\022H\n" +
      "\007longBin\030\004 \003(\01327.com.ltv.aerospike.api.p" +
      "roto.QueryResponse.LongBinEntry\022J\n\010float" +
      "Bin\030\005 \003(\01328.com.ltv.aerospike.api.proto." +
      "QueryResponse.FloatBinEntry\022L\n\tdoubleBin" +
      "\030\006 \003(\01329.com.ltv.aerospike.api.proto.Que" +
      "ryResponse.DoubleBinEntry\022N\n\nbooleanBin\030" +
      "\007 \003(\0132:.com.ltv.aerospike.api.proto.Quer" +
      "yResponse.BooleanBinEntry\022J\n\010bytesBin\030\010 " +
      "\003(\01328.com.ltv.aerospike.api.proto.QueryR" +
      "esponse.BytesBinEntry\0320\n\016StringBinEntry\022" +
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032-\n\013IntBi" +
      "nEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\032." +
      "\n\014LongBinEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001" +
      "(\003:\0028\001\032/\n\rFloatBinEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005" +
      "value\030\002 \001(\002:\0028\001\0320\n\016DoubleBinEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\0321\n\017BooleanBinE" +
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\010:\0028\001\032/\n\r" +
      "BytesBinEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(" +
      "\014:\0028\0012p\n\014QueryService\022`\n\005query\022).com.ltv" +
      ".aerospike.api.proto.QueryRequest\032*.com." +
      "ltv.aerospike.api.proto.QueryResponse0\001b" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor,
        new java.lang.String[] { "Namespace", "Set", "Fields", "Filter", "StringValue1", "IntValue1", "LongValue1", "FloatValue1", "DoubleValue1", "BooleanValue1", "BytesValue1", "StringValue2", "IntValue2", "LongValue2", "FloatValue2", "DoubleValue2", "BooleanValue2", "BytesValue2", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FieldsEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(0);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FieldsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_FieldsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FilterEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(1);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FilterEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_FilterEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue1Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(2);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue1Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue1Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue1Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(3);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue1Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue1Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue1Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(4);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue1Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue1Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue1Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(5);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue1Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue1Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue1Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(6);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue1Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue1Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue1Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(7);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue1Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue1Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue1Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(8);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue1Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue1Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue2Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(9);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue2Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_StringValue2Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue2Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(10);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue2Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_IntValue2Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue2Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(11);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue2Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_LongValue2Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue2Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(12);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue2Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_FloatValue2Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue2Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(13);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue2Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_DoubleValue2Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue2Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(14);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue2Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_BooleanValue2Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue2Entry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryRequest_descriptor.getNestedTypes().get(15);
    internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue2Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryRequest_BytesValue2Entry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor,
        new java.lang.String[] { "ErrorCode", "StringBin", "IntBin", "LongBin", "FloatBin", "DoubleBin", "BooleanBin", "BytesBin", });
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_StringBinEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor.getNestedTypes().get(0);
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_StringBinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryResponse_StringBinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_IntBinEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor.getNestedTypes().get(1);
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_IntBinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryResponse_IntBinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_LongBinEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor.getNestedTypes().get(2);
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_LongBinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryResponse_LongBinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_FloatBinEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor.getNestedTypes().get(3);
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_FloatBinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryResponse_FloatBinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_DoubleBinEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor.getNestedTypes().get(4);
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_DoubleBinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryResponse_DoubleBinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_BooleanBinEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor.getNestedTypes().get(5);
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_BooleanBinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryResponse_BooleanBinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_BytesBinEntry_descriptor =
      internal_static_com_ltv_aerospike_api_proto_QueryResponse_descriptor.getNestedTypes().get(6);
    internal_static_com_ltv_aerospike_api_proto_QueryResponse_BytesBinEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ltv_aerospike_api_proto_QueryResponse_BytesBinEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
