name: Publish artifacts to JFrog
description: "Publishes artifacts to JFrog"

inputs:
  jfrog-releases-repo-name:
    description: ""
    required: false
    default: clients-maven-dev-local
  jfrog-snapshots-repo-name:
    description: ""
    required: false
    default: clients-maven-dev-local
  jfrog-platform-url:
    description: ""
    required: false
    default: https://aerospike.jfrog.io
  oidc-provider:
    description: ""
    required: true
  oidc-audience:
    description: ""
    required: true
  crypto-type:
    description: ""
    required: false
  artifact-name:
    description: ""
    required: true
  artifact-id:
    description: ""
    required: true
  artifact-version:
    description: ""
    required: true
  deploy-spec-path:
    description: ""
    required: false
    default: deploy-resources
  package-install-location:
    description: ""
    required: false
    default: ~/.m2/repository

runs:
  using: "composite"
  steps:
    - name: Set up JFrog credentials
      id: setup-jfrog-cli
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ inputs.jfrog-platform-url }}
      with:
        version: 2.72.2
        oidc-provider-name: ${{ inputs.oidc-provider }}
        oidc-audience: ${{ inputs.oidc-audience }}

    - name: Configure jf cli
      shell: bash
      run: |
        jf mvn-config \
        --repo-deploy-releases=${{ inputs.jfrog-releases-repo-name }} \
        --repo-deploy-snapshots=${{ inputs.jfrog-snapshots-repo-name }}

    - name: Generate deploy spec
      shell: bash
      working-directory: client
      run: |
        jq --arg targetPattern "${{ inputs.jfrog-releases-repo-name }}/com/aerospike/${{ inputs.artifact-id }}/${{ inputs.artifact-version }}/" \
        --arg publicPomPattern "${{ inputs.package-install-location }}/com/aerospike/${{ inputs.artifact-id }}/${{ inputs.artifact-version }}/*.pom" \
        --arg jarPattern "${{ inputs.package-install-location }}/com/aerospike/${{ inputs.artifact-id }}/${{ inputs.artifact-version }}/*.jar" \
        --arg ascPattern "${{ inputs.package-install-location }}/com/aerospike/${{ inputs.artifact-id }}/${{ inputs.artifact-version }}/*.asc" \
        '
        .files[0].pattern = $jarPattern |
        .files[0].target = $targetPattern |
        .files[1].pattern = $ascPattern |
        .files[1].target = $targetPattern |
        .files[2].pattern = $publicPomPattern |
        .files[2].target = $targetPattern
        ' ${{ inputs.deploy-spec-path }}/publish-spec.json.template > ${{ inputs.deploy-spec-path }}/publish-spec.json

    - name: Debug deploy spec
      shell: bash
      working-directory: client
      run: |
        cat ${{ inputs.deploy-spec-path }}/publish-spec.json

    - name: Upload artifacts
      shell: bash
      working-directory: client
      run: |
        jf rt upload --spec=${{ inputs.deploy-spec-path }}/publish-spec.json \
            --module=${{ inputs.artifact-id }} \
            --build-name=clients-java-push-to-dev_${{ inputs.artifact-id }} \
            --build-number=${{ github.run_number }}

        # record env variables 
        jf rt bce clients-java-push-to-dev_${{ inputs.artifact-id }} ${{ github.run_number }}

        # record git info
        jf rt bag clients-java-push-to-dev_${{ inputs.artifact-id }} ${{ github.run_number }}

        # publish build info
        jf rt bp clients-java-push-to-dev_${{ inputs.artifact-id }} ${{ github.run_number }}
