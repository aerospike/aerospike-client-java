permissions:
  # This is required for requesting the OIDC token
  id-token: write

on:
  workflow_call:
    inputs:
      branch:
        type: string
        required: true
      java-version:
        type: string
        required: true
      crypto-type:
        type: string
        required: true
    secrets:
      GPG_SECRET_KEY:
        required: true
      GPG_PASS:
        required: true
      JFROG_OIDC_PROVIDER:
        required: true
      JFROG_OIDC_AUDIENCE:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      # Java plugin will setup gpg but we are not using maven to deploy do JFrog.
      # - jf mvn clean install on publish does not publish POM we would like to publish
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "semeru"
          java-version: ${{ inputs.java-version }}
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: GPG_PASS

      - name: Build all modules
        shell: bash
        run: mvn clean install -P ${{ inputs.crypto-type }} # The crypto profile is usually set with set_crypto but since we need to toggle multiple prfiles set_crypto option is not being picked up

      - name: Stage artifacts for publish
        working-directory: client
        shell: bash
        run: mvn clean source:jar javadoc:jar install -P gpg -P ${{ inputs.crypto-type }} # The crypto profile is usually set with set_crypto but since we need to toggle multiple prfiles set_crypto option is not being picked up
        env:
          GPG_PASS: ${{ secrets.GPG_PASS }}

      - name: Get artifact name
        id: get-artifact-name
        working-directory: client
        run: |
          echo artifact-name=$(mvn help:evaluate -Dexpression=project.build.finalName -P ${{ inputs.crypto-type }} -q -DforceStdout) >> $GITHUB_OUTPUT

      - name: Get artifact ID
        id: get-artifact-id
        working-directory: client
        run: |
          echo artifact-id="aerospike-client${{ inputs.crypto-type == 'bouncycastle' && '-bc' || '' }}-jdk${{ inputs.java-version }}" >> $GITHUB_OUTPUT

      - name: Get artifact version
        id: get-artifact-version
        working-directory: client
        run: |
          echo artifact-version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_OUTPUT

      - name: Publish to JFrog
        uses: ./.github/actions/publish-to-jfrog
        with:
          crypto-type: ${{ inputs.crypto-type }}
          oidc-provider: ${{ secrets.JFROG_OIDC_PROVIDER }}
          oidc-audience: ${{ secrets.JFROG_OIDC_AUDIENCE }}
          artifact-name: ${{ steps.get-artifact-name.outputs.artifact-name }}
          artifact-id: ${{ steps.get-artifact-id.outputs.artifact-id }}
          artifact-version: ${{ steps.get-artifact-version.outputs.artifact-version }}
